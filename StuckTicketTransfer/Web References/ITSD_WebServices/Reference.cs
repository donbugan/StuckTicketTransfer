//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace StuckTicketTransfer.ITSD_WebServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="USD_WebServiceSoapSoapBinding", Namespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk")]
    public partial class USD_WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAssetLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback createLrelRelationshipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMemberToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback attachChangeToRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback callServerMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback createActivityLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAssetParentChildRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createChangeOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback createIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback createWorkFlowTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWorkFlowTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback createQuickTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback logCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPolicyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback detachChangeFromRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback doQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback escalateOperationCompleted;
        
        private System.Threading.SendOrPostCallback freeListHandlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAssetExtensionInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getConfigurationModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupMemberListValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getObjectTypeInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHandleForUseridOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessTypeForContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLrelLengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLrelValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotificationsForContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback getObjectValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPendingChangeTaskListForContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPendingIssueTaskListForContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPropertyInfoForCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRelatedListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRelatedListValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkFlowTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskListValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getValidTaskTransitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getValidTransitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDependentAttrControlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginServiceManagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginWithArtifactOperationCompleted;
        
        private System.Threading.SendOrPostCallback impersonateOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback notifyContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeLrelRelationshipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeMemberFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback serverStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBopsidOperationCompleted;
        
        private System.Threading.SendOrPostCallback getArtifactOperationCompleted;
        
        private System.Threading.SendOrPostCallback attachURLLinkToTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAttmntOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentsByIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDecisionTreesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBookmarksOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuestionsAskedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPrioritiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback rateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback findContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPermissionGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback addBookmarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback doSelectKDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFolderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFolderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttmntListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttmntInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRepositoryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback faqOperationCompleted;
        
        private System.Threading.SendOrPostCallback attmntFolderLinkCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback attachURLLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteBookmarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKDListPerAttmntOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttmntListPerKDOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAttmntLinkedKDOperationCompleted;
        
        private System.Threading.SendOrPostCallback transferOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public USD_WebService() {
            this.Url = global::StuckTicketTransfer.Properties.Settings.Default.StuckTicketTransfer_ITSD_WebServices_USD_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createObjectCompletedEventHandler createObjectCompleted;
        
        /// <remarks/>
        public event addAssetLogCompletedEventHandler addAssetLogCompleted;
        
        /// <remarks/>
        public event createLrelRelationshipsCompletedEventHandler createLrelRelationshipsCompleted;
        
        /// <remarks/>
        public event addMemberToGroupCompletedEventHandler addMemberToGroupCompleted;
        
        /// <remarks/>
        public event attachChangeToRequestCompletedEventHandler attachChangeToRequestCompleted;
        
        /// <remarks/>
        public event callServerMethodCompletedEventHandler callServerMethodCompleted;
        
        /// <remarks/>
        public event changeStatusCompletedEventHandler changeStatusCompleted;
        
        /// <remarks/>
        public event clearNotificationCompletedEventHandler clearNotificationCompleted;
        
        /// <remarks/>
        public event createActivityLogCompletedEventHandler createActivityLogCompleted;
        
        /// <remarks/>
        public event createAssetCompletedEventHandler createAssetCompleted;
        
        /// <remarks/>
        public event createAssetParentChildRelationshipCompletedEventHandler createAssetParentChildRelationshipCompleted;
        
        /// <remarks/>
        public event createAttachmentCompletedEventHandler createAttachmentCompleted;
        
        /// <remarks/>
        public event removeAttachmentCompletedEventHandler removeAttachmentCompleted;
        
        /// <remarks/>
        public event createChangeOrderCompletedEventHandler createChangeOrderCompleted;
        
        /// <remarks/>
        public event createIssueCompletedEventHandler createIssueCompleted;
        
        /// <remarks/>
        public event createWorkFlowTaskCompletedEventHandler createWorkFlowTaskCompleted;
        
        /// <remarks/>
        public event deleteWorkFlowTaskCompletedEventHandler deleteWorkFlowTaskCompleted;
        
        /// <remarks/>
        public event createRequestCompletedEventHandler createRequestCompleted;
        
        /// <remarks/>
        public event createTicketCompletedEventHandler createTicketCompleted;
        
        /// <remarks/>
        public event createQuickTicketCompletedEventHandler createQuickTicketCompleted;
        
        /// <remarks/>
        public event closeTicketCompletedEventHandler closeTicketCompleted;
        
        /// <remarks/>
        public event logCommentCompletedEventHandler logCommentCompleted;
        
        /// <remarks/>
        public event getPolicyInfoCompletedEventHandler getPolicyInfoCompleted;
        
        /// <remarks/>
        public event detachChangeFromRequestCompletedEventHandler detachChangeFromRequestCompleted;
        
        /// <remarks/>
        public event doSelectCompletedEventHandler doSelectCompleted;
        
        /// <remarks/>
        public event doQueryCompletedEventHandler doQueryCompleted;
        
        /// <remarks/>
        public event escalateCompletedEventHandler escalateCompleted;
        
        /// <remarks/>
        public event freeListHandlesCompletedEventHandler freeListHandlesCompleted;
        
        /// <remarks/>
        public event getAssetExtensionInformationCompletedEventHandler getAssetExtensionInformationCompleted;
        
        /// <remarks/>
        public event getConfigurationModeCompletedEventHandler getConfigurationModeCompleted;
        
        /// <remarks/>
        public event getGroupMemberListValuesCompletedEventHandler getGroupMemberListValuesCompleted;
        
        /// <remarks/>
        public event getObjectTypeInformationCompletedEventHandler getObjectTypeInformationCompleted;
        
        /// <remarks/>
        public event getHandleForUseridCompletedEventHandler getHandleForUseridCompleted;
        
        /// <remarks/>
        public event getAccessTypeForContactCompletedEventHandler getAccessTypeForContactCompleted;
        
        /// <remarks/>
        public event getListValuesCompletedEventHandler getListValuesCompleted;
        
        /// <remarks/>
        public event getLrelLengthCompletedEventHandler getLrelLengthCompleted;
        
        /// <remarks/>
        public event getLrelValuesCompletedEventHandler getLrelValuesCompleted;
        
        /// <remarks/>
        public event getNotificationsForContactCompletedEventHandler getNotificationsForContactCompleted;
        
        /// <remarks/>
        public event getObjectValuesCompletedEventHandler getObjectValuesCompleted;
        
        /// <remarks/>
        public event getPendingChangeTaskListForContactCompletedEventHandler getPendingChangeTaskListForContactCompleted;
        
        /// <remarks/>
        public event getPendingIssueTaskListForContactCompletedEventHandler getPendingIssueTaskListForContactCompleted;
        
        /// <remarks/>
        public event getPropertyInfoForCategoryCompletedEventHandler getPropertyInfoForCategoryCompleted;
        
        /// <remarks/>
        public event getRelatedListCompletedEventHandler getRelatedListCompleted;
        
        /// <remarks/>
        public event getRelatedListValuesCompletedEventHandler getRelatedListValuesCompleted;
        
        /// <remarks/>
        public event getWorkFlowTemplatesCompletedEventHandler getWorkFlowTemplatesCompleted;
        
        /// <remarks/>
        public event getTaskListValuesCompletedEventHandler getTaskListValuesCompleted;
        
        /// <remarks/>
        public event getValidTaskTransitionsCompletedEventHandler getValidTaskTransitionsCompleted;
        
        /// <remarks/>
        public event getValidTransitionsCompletedEventHandler getValidTransitionsCompleted;
        
        /// <remarks/>
        public event getDependentAttrControlsCompletedEventHandler getDependentAttrControlsCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event loginServiceCompletedEventHandler loginServiceCompleted;
        
        /// <remarks/>
        public event loginServiceManagedCompletedEventHandler loginServiceManagedCompleted;
        
        /// <remarks/>
        public event loginWithArtifactCompletedEventHandler loginWithArtifactCompleted;
        
        /// <remarks/>
        public event impersonateCompletedEventHandler impersonateCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event notifyContactsCompletedEventHandler notifyContactsCompleted;
        
        /// <remarks/>
        public event removeLrelRelationshipsCompletedEventHandler removeLrelRelationshipsCompleted;
        
        /// <remarks/>
        public event removeMemberFromGroupCompletedEventHandler removeMemberFromGroupCompleted;
        
        /// <remarks/>
        public event serverStatusCompletedEventHandler serverStatusCompleted;
        
        /// <remarks/>
        public event updateObjectCompletedEventHandler updateObjectCompleted;
        
        /// <remarks/>
        public event getBopsidCompletedEventHandler getBopsidCompleted;
        
        /// <remarks/>
        public event getArtifactCompletedEventHandler getArtifactCompleted;
        
        /// <remarks/>
        public event attachURLLinkToTicketCompletedEventHandler attachURLLinkToTicketCompleted;
        
        /// <remarks/>
        public event createAttmntCompletedEventHandler createAttmntCompleted;
        
        /// <remarks/>
        public event getDocumentsByIDsCompletedEventHandler getDocumentsByIDsCompleted;
        
        /// <remarks/>
        public event getDecisionTreesCompletedEventHandler getDecisionTreesCompleted;
        
        /// <remarks/>
        public event deleteDocumentCompletedEventHandler deleteDocumentCompleted;
        
        /// <remarks/>
        public event getCategoryCompletedEventHandler getCategoryCompleted;
        
        /// <remarks/>
        public event getStatusesCompletedEventHandler getStatusesCompleted;
        
        /// <remarks/>
        public event getBookmarksCompletedEventHandler getBookmarksCompleted;
        
        /// <remarks/>
        public event getQuestionsAskedCompletedEventHandler getQuestionsAskedCompleted;
        
        /// <remarks/>
        public event getPrioritiesCompletedEventHandler getPrioritiesCompleted;
        
        /// <remarks/>
        public event getDocumentTypesCompletedEventHandler getDocumentTypesCompleted;
        
        /// <remarks/>
        public event getTemplateListCompletedEventHandler getTemplateListCompleted;
        
        /// <remarks/>
        public event getWorkflowTemplateListCompletedEventHandler getWorkflowTemplateListCompleted;
        
        /// <remarks/>
        public event addCommentCompletedEventHandler addCommentCompleted;
        
        /// <remarks/>
        public event deleteCommentCompletedEventHandler deleteCommentCompleted;
        
        /// <remarks/>
        public event createDocumentCompletedEventHandler createDocumentCompleted;
        
        /// <remarks/>
        public event modifyDocumentCompletedEventHandler modifyDocumentCompleted;
        
        /// <remarks/>
        public event rateDocumentCompletedEventHandler rateDocumentCompleted;
        
        /// <remarks/>
        public event getCommentsCompletedEventHandler getCommentsCompleted;
        
        /// <remarks/>
        public event findContactsCompletedEventHandler findContactsCompleted;
        
        /// <remarks/>
        public event getPermissionGroupsCompletedEventHandler getPermissionGroupsCompleted;
        
        /// <remarks/>
        public event getContactCompletedEventHandler getContactCompleted;
        
        /// <remarks/>
        public event addBookmarkCompletedEventHandler addBookmarkCompleted;
        
        /// <remarks/>
        public event updateRatingCompletedEventHandler updateRatingCompleted;
        
        /// <remarks/>
        public event doSelectKDCompletedEventHandler doSelectKDCompleted;
        
        /// <remarks/>
        public event getFolderListCompletedEventHandler getFolderListCompleted;
        
        /// <remarks/>
        public event getFolderInfoCompletedEventHandler getFolderInfoCompleted;
        
        /// <remarks/>
        public event getAttmntListCompletedEventHandler getAttmntListCompleted;
        
        /// <remarks/>
        public event getAttmntInfoCompletedEventHandler getAttmntInfoCompleted;
        
        /// <remarks/>
        public event getRepositoryInfoCompletedEventHandler getRepositoryInfoCompleted;
        
        /// <remarks/>
        public event createFolderCompletedEventHandler createFolderCompleted;
        
        /// <remarks/>
        public event faqCompletedEventHandler faqCompleted;
        
        /// <remarks/>
        public event attmntFolderLinkCountCompletedEventHandler attmntFolderLinkCountCompleted;
        
        /// <remarks/>
        public event attachURLLinkCompletedEventHandler attachURLLinkCompleted;
        
        /// <remarks/>
        public event deleteBookmarkCompletedEventHandler deleteBookmarkCompleted;
        
        /// <remarks/>
        public event getKDListPerAttmntCompletedEventHandler getKDListPerAttmntCompleted;
        
        /// <remarks/>
        public event getAttmntListPerKDCompletedEventHandler getAttmntListPerKDCompleted;
        
        /// <remarks/>
        public event isAttmntLinkedKDCompletedEventHandler isAttmntLinkedKDCompleted;
        
        /// <remarks/>
        public event transferCompletedEventHandler transferCompleted;
        
        /// <remarks/>
        public event searchCompletedEventHandler searchCompleted;
        
        /// <remarks/>
        public event getDocumentCompletedEventHandler getDocumentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createObject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectType, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attrVals, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string createObjectResult, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newHandle) {
            object[] results = this.Invoke("createObject", new object[] {
                        sid,
                        objectType,
                        attrVals,
                        attributes,
                        createObjectResult,
                        newHandle});
            createObjectResult = ((string)(results[0]));
            newHandle = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void createObjectAsync(int sid, string objectType, string[] attrVals, string[] attributes, string createObjectResult, string newHandle) {
            this.createObjectAsync(sid, objectType, attrVals, attributes, createObjectResult, newHandle, null);
        }
        
        /// <remarks/>
        public void createObjectAsync(int sid, string objectType, string[] attrVals, string[] attributes, string createObjectResult, string newHandle, object userState) {
            if ((this.createObjectOperationCompleted == null)) {
                this.createObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateObjectOperationCompleted);
            }
            this.InvokeAsync("createObject", new object[] {
                        sid,
                        objectType,
                        attrVals,
                        attributes,
                        createObjectResult,
                        newHandle}, this.createObjectOperationCompleted, userState);
        }
        
        private void OncreateObjectOperationCompleted(object arg) {
            if ((this.createObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createObjectCompleted(this, new createObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAssetLog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string assetHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logText) {
            this.Invoke("addAssetLog", new object[] {
                        sid,
                        assetHandle,
                        contactHandle,
                        logText});
        }
        
        /// <remarks/>
        public void addAssetLogAsync(int sid, string assetHandle, string contactHandle, string logText) {
            this.addAssetLogAsync(sid, assetHandle, contactHandle, logText, null);
        }
        
        /// <remarks/>
        public void addAssetLogAsync(int sid, string assetHandle, string contactHandle, string logText, object userState) {
            if ((this.addAssetLogOperationCompleted == null)) {
                this.addAssetLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAssetLogOperationCompleted);
            }
            this.InvokeAsync("addAssetLog", new object[] {
                        sid,
                        assetHandle,
                        contactHandle,
                        logText}, this.addAssetLogOperationCompleted, userState);
        }
        
        private void OnaddAssetLogOperationCompleted(object arg) {
            if ((this.addAssetLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAssetLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createLrelRelationships([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contextObject, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lrelName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] addObjectHandles) {
            this.Invoke("createLrelRelationships", new object[] {
                        sid,
                        contextObject,
                        lrelName,
                        addObjectHandles});
        }
        
        /// <remarks/>
        public void createLrelRelationshipsAsync(int sid, string contextObject, string lrelName, string[] addObjectHandles) {
            this.createLrelRelationshipsAsync(sid, contextObject, lrelName, addObjectHandles, null);
        }
        
        /// <remarks/>
        public void createLrelRelationshipsAsync(int sid, string contextObject, string lrelName, string[] addObjectHandles, object userState) {
            if ((this.createLrelRelationshipsOperationCompleted == null)) {
                this.createLrelRelationshipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateLrelRelationshipsOperationCompleted);
            }
            this.InvokeAsync("createLrelRelationships", new object[] {
                        sid,
                        contextObject,
                        lrelName,
                        addObjectHandles}, this.createLrelRelationshipsOperationCompleted, userState);
        }
        
        private void OncreateLrelRelationshipsOperationCompleted(object arg) {
            if ((this.createLrelRelationshipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createLrelRelationshipsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addMemberToGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string groupHandle) {
            this.Invoke("addMemberToGroup", new object[] {
                        sid,
                        contactHandle,
                        groupHandle});
        }
        
        /// <remarks/>
        public void addMemberToGroupAsync(int sid, string contactHandle, string groupHandle) {
            this.addMemberToGroupAsync(sid, contactHandle, groupHandle, null);
        }
        
        /// <remarks/>
        public void addMemberToGroupAsync(int sid, string contactHandle, string groupHandle, object userState) {
            if ((this.addMemberToGroupOperationCompleted == null)) {
                this.addMemberToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMemberToGroupOperationCompleted);
            }
            this.InvokeAsync("addMemberToGroup", new object[] {
                        sid,
                        contactHandle,
                        groupHandle}, this.addMemberToGroupOperationCompleted, userState);
        }
        
        private void OnaddMemberToGroupOperationCompleted(object arg) {
            if ((this.addMemberToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMemberToGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("attachChangeToRequestReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string attachChangeToRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string requestHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string changeHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] changeAttrVals, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description) {
            object[] results = this.Invoke("attachChangeToRequest", new object[] {
                        sid,
                        creator,
                        requestHandle,
                        changeHandle,
                        changeAttrVals,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void attachChangeToRequestAsync(int sid, string creator, string requestHandle, string changeHandle, string[] changeAttrVals, string description) {
            this.attachChangeToRequestAsync(sid, creator, requestHandle, changeHandle, changeAttrVals, description, null);
        }
        
        /// <remarks/>
        public void attachChangeToRequestAsync(int sid, string creator, string requestHandle, string changeHandle, string[] changeAttrVals, string description, object userState) {
            if ((this.attachChangeToRequestOperationCompleted == null)) {
                this.attachChangeToRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnattachChangeToRequestOperationCompleted);
            }
            this.InvokeAsync("attachChangeToRequest", new object[] {
                        sid,
                        creator,
                        requestHandle,
                        changeHandle,
                        changeAttrVals,
                        description}, this.attachChangeToRequestOperationCompleted, userState);
        }
        
        private void OnattachChangeToRequestOperationCompleted(object arg) {
            if ((this.attachChangeToRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.attachChangeToRequestCompleted(this, new attachChangeToRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("callServerMethodReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callServerMethod([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string methodName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string factoryName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string formatList, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] parameters) {
            object[] results = this.Invoke("callServerMethod", new object[] {
                        sid,
                        methodName,
                        factoryName,
                        formatList,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void callServerMethodAsync(int sid, string methodName, string factoryName, string formatList, string[] parameters) {
            this.callServerMethodAsync(sid, methodName, factoryName, formatList, parameters, null);
        }
        
        /// <remarks/>
        public void callServerMethodAsync(int sid, string methodName, string factoryName, string formatList, string[] parameters, object userState) {
            if ((this.callServerMethodOperationCompleted == null)) {
                this.callServerMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallServerMethodOperationCompleted);
            }
            this.InvokeAsync("callServerMethod", new object[] {
                        sid,
                        methodName,
                        factoryName,
                        formatList,
                        parameters}, this.callServerMethodOperationCompleted, userState);
        }
        
        private void OncallServerMethodOperationCompleted(object arg) {
            if ((this.callServerMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callServerMethodCompleted(this, new callServerMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("changeStatusReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string changeStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newStatusHandle) {
            object[] results = this.Invoke("changeStatus", new object[] {
                        sid,
                        creator,
                        objectHandle,
                        description,
                        newStatusHandle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changeStatusAsync(int sid, string creator, string objectHandle, string description, string newStatusHandle) {
            this.changeStatusAsync(sid, creator, objectHandle, description, newStatusHandle, null);
        }
        
        /// <remarks/>
        public void changeStatusAsync(int sid, string creator, string objectHandle, string description, string newStatusHandle, object userState) {
            if ((this.changeStatusOperationCompleted == null)) {
                this.changeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeStatusOperationCompleted);
            }
            this.InvokeAsync("changeStatus", new object[] {
                        sid,
                        creator,
                        objectHandle,
                        description,
                        newStatusHandle}, this.changeStatusOperationCompleted, userState);
        }
        
        private void OnchangeStatusOperationCompleted(object arg) {
            if ((this.changeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeStatusCompleted(this, new changeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("clearNotificationReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int clearNotification([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lrObject, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clearBy) {
            object[] results = this.Invoke("clearNotification", new object[] {
                        sid,
                        lrObject,
                        clearBy});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void clearNotificationAsync(int sid, string lrObject, string clearBy) {
            this.clearNotificationAsync(sid, lrObject, clearBy, null);
        }
        
        /// <remarks/>
        public void clearNotificationAsync(int sid, string lrObject, string clearBy, object userState) {
            if ((this.clearNotificationOperationCompleted == null)) {
                this.clearNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearNotificationOperationCompleted);
            }
            this.InvokeAsync("clearNotification", new object[] {
                        sid,
                        lrObject,
                        clearBy}, this.clearNotificationOperationCompleted, userState);
        }
        
        private void OnclearNotificationOperationCompleted(object arg) {
            if ((this.clearNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearNotificationCompleted(this, new clearNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createActivityLogReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createActivityLog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int timeSpent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool @internal) {
            object[] results = this.Invoke("createActivityLog", new object[] {
                        sid,
                        creator,
                        objectHandle,
                        description,
                        logType,
                        timeSpent,
                        @internal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createActivityLogAsync(int sid, string creator, string objectHandle, string description, string logType, int timeSpent, bool @internal) {
            this.createActivityLogAsync(sid, creator, objectHandle, description, logType, timeSpent, @internal, null);
        }
        
        /// <remarks/>
        public void createActivityLogAsync(int sid, string creator, string objectHandle, string description, string logType, int timeSpent, bool @internal, object userState) {
            if ((this.createActivityLogOperationCompleted == null)) {
                this.createActivityLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateActivityLogOperationCompleted);
            }
            this.InvokeAsync("createActivityLog", new object[] {
                        sid,
                        creator,
                        objectHandle,
                        description,
                        logType,
                        timeSpent,
                        @internal}, this.createActivityLogOperationCompleted, userState);
        }
        
        private void OncreateActivityLogOperationCompleted(object arg) {
            if ((this.createActivityLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createActivityLogCompleted(this, new createActivityLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createAsset([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attrVals, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string createAssetResult, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newAssetHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newExtensionHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newExtensionName) {
            object[] results = this.Invoke("createAsset", new object[] {
                        sid,
                        attrVals,
                        attributes,
                        createAssetResult,
                        newAssetHandle,
                        newExtensionHandle,
                        newExtensionName});
            createAssetResult = ((string)(results[0]));
            newAssetHandle = ((string)(results[1]));
            newExtensionHandle = ((string)(results[2]));
            newExtensionName = ((string)(results[3]));
        }
        
        /// <remarks/>
        public void createAssetAsync(int sid, string[] attrVals, string[] attributes, string createAssetResult, string newAssetHandle, string newExtensionHandle, string newExtensionName) {
            this.createAssetAsync(sid, attrVals, attributes, createAssetResult, newAssetHandle, newExtensionHandle, newExtensionName, null);
        }
        
        /// <remarks/>
        public void createAssetAsync(int sid, string[] attrVals, string[] attributes, string createAssetResult, string newAssetHandle, string newExtensionHandle, string newExtensionName, object userState) {
            if ((this.createAssetOperationCompleted == null)) {
                this.createAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAssetOperationCompleted);
            }
            this.InvokeAsync("createAsset", new object[] {
                        sid,
                        attrVals,
                        attributes,
                        createAssetResult,
                        newAssetHandle,
                        newExtensionHandle,
                        newExtensionName}, this.createAssetOperationCompleted, userState);
        }
        
        private void OncreateAssetOperationCompleted(object arg) {
            if ((this.createAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAssetCompleted(this, new createAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createAssetParentChildRelationshipReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createAssetParentChildRelationship([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parentHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string childHandle) {
            object[] results = this.Invoke("createAssetParentChildRelationship", new object[] {
                        sid,
                        parentHandle,
                        childHandle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAssetParentChildRelationshipAsync(int sid, string parentHandle, string childHandle) {
            this.createAssetParentChildRelationshipAsync(sid, parentHandle, childHandle, null);
        }
        
        /// <remarks/>
        public void createAssetParentChildRelationshipAsync(int sid, string parentHandle, string childHandle, object userState) {
            if ((this.createAssetParentChildRelationshipOperationCompleted == null)) {
                this.createAssetParentChildRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAssetParentChildRelationshipOperationCompleted);
            }
            this.InvokeAsync("createAssetParentChildRelationship", new object[] {
                        sid,
                        parentHandle,
                        childHandle}, this.createAssetParentChildRelationshipOperationCompleted, userState);
        }
        
        private void OncreateAssetParentChildRelationshipOperationCompleted(object arg) {
            if ((this.createAssetParentChildRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAssetParentChildRelationshipCompleted(this, new createAssetParentChildRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createAttachmentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createAttachment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string repositoryHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fileName) {
            object[] results = this.Invoke("createAttachment", new object[] {
                        sid,
                        repositoryHandle,
                        objectHandle,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAttachmentAsync(int sid, string repositoryHandle, string objectHandle, string description, string fileName) {
            this.createAttachmentAsync(sid, repositoryHandle, objectHandle, description, fileName, null);
        }
        
        /// <remarks/>
        public void createAttachmentAsync(int sid, string repositoryHandle, string objectHandle, string description, string fileName, object userState) {
            if ((this.createAttachmentOperationCompleted == null)) {
                this.createAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAttachmentOperationCompleted);
            }
            this.InvokeAsync("createAttachment", new object[] {
                        sid,
                        repositoryHandle,
                        objectHandle,
                        description,
                        fileName}, this.createAttachmentOperationCompleted, userState);
        }
        
        private void OncreateAttachmentOperationCompleted(object arg) {
            if ((this.createAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAttachmentCompleted(this, new createAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("removeAttachmentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int removeAttachment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string attHandle) {
            object[] results = this.Invoke("removeAttachment", new object[] {
                        sid,
                        attHandle});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void removeAttachmentAsync(int sid, string attHandle) {
            this.removeAttachmentAsync(sid, attHandle, null);
        }
        
        /// <remarks/>
        public void removeAttachmentAsync(int sid, string attHandle, object userState) {
            if ((this.removeAttachmentOperationCompleted == null)) {
                this.removeAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAttachmentOperationCompleted);
            }
            this.InvokeAsync("removeAttachment", new object[] {
                        sid,
                        attHandle}, this.removeAttachmentOperationCompleted, userState);
        }
        
        private void OnremoveAttachmentOperationCompleted(object arg) {
            if ((this.removeAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAttachmentCompleted(this, new removeAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createChangeOrderReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createChangeOrder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creatorHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attrVals, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] propertyValues, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string template, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newChangeHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newChangeNumber) {
            object[] results = this.Invoke("createChangeOrder", new object[] {
                        sid,
                        creatorHandle,
                        attrVals,
                        propertyValues,
                        template,
                        attributes,
                        newChangeHandle,
                        newChangeNumber});
            newChangeHandle = ((string)(results[1]));
            newChangeNumber = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createChangeOrderAsync(int sid, string creatorHandle, string[] attrVals, string[] propertyValues, string template, string[] attributes, string newChangeHandle, string newChangeNumber) {
            this.createChangeOrderAsync(sid, creatorHandle, attrVals, propertyValues, template, attributes, newChangeHandle, newChangeNumber, null);
        }
        
        /// <remarks/>
        public void createChangeOrderAsync(int sid, string creatorHandle, string[] attrVals, string[] propertyValues, string template, string[] attributes, string newChangeHandle, string newChangeNumber, object userState) {
            if ((this.createChangeOrderOperationCompleted == null)) {
                this.createChangeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateChangeOrderOperationCompleted);
            }
            this.InvokeAsync("createChangeOrder", new object[] {
                        sid,
                        creatorHandle,
                        attrVals,
                        propertyValues,
                        template,
                        attributes,
                        newChangeHandle,
                        newChangeNumber}, this.createChangeOrderOperationCompleted, userState);
        }
        
        private void OncreateChangeOrderOperationCompleted(object arg) {
            if ((this.createChangeOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createChangeOrderCompleted(this, new createChangeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createIssueReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createIssue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creatorHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attrVals, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] propertyValues, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string template, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newIssueHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newIssueNumber) {
            object[] results = this.Invoke("createIssue", new object[] {
                        sid,
                        creatorHandle,
                        attrVals,
                        propertyValues,
                        template,
                        attributes,
                        newIssueHandle,
                        newIssueNumber});
            newIssueHandle = ((string)(results[1]));
            newIssueNumber = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createIssueAsync(int sid, string creatorHandle, string[] attrVals, string[] propertyValues, string template, string[] attributes, string newIssueHandle, string newIssueNumber) {
            this.createIssueAsync(sid, creatorHandle, attrVals, propertyValues, template, attributes, newIssueHandle, newIssueNumber, null);
        }
        
        /// <remarks/>
        public void createIssueAsync(int sid, string creatorHandle, string[] attrVals, string[] propertyValues, string template, string[] attributes, string newIssueHandle, string newIssueNumber, object userState) {
            if ((this.createIssueOperationCompleted == null)) {
                this.createIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateIssueOperationCompleted);
            }
            this.InvokeAsync("createIssue", new object[] {
                        sid,
                        creatorHandle,
                        attrVals,
                        propertyValues,
                        template,
                        attributes,
                        newIssueHandle,
                        newIssueNumber}, this.createIssueOperationCompleted, userState);
        }
        
        private void OncreateIssueOperationCompleted(object arg) {
            if ((this.createIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createIssueCompleted(this, new createIssueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createWorkFlowTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attrVals, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creatorHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string selectedWorkFlow, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string taskType, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string createWorkFlowTaskResult, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newHandle) {
            object[] results = this.Invoke("createWorkFlowTask", new object[] {
                        sid,
                        attrVals,
                        objectHandle,
                        creatorHandle,
                        selectedWorkFlow,
                        taskType,
                        attributes,
                        createWorkFlowTaskResult,
                        newHandle});
            createWorkFlowTaskResult = ((string)(results[0]));
            newHandle = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void createWorkFlowTaskAsync(int sid, string[] attrVals, string objectHandle, string creatorHandle, string selectedWorkFlow, string taskType, string[] attributes, string createWorkFlowTaskResult, string newHandle) {
            this.createWorkFlowTaskAsync(sid, attrVals, objectHandle, creatorHandle, selectedWorkFlow, taskType, attributes, createWorkFlowTaskResult, newHandle, null);
        }
        
        /// <remarks/>
        public void createWorkFlowTaskAsync(int sid, string[] attrVals, string objectHandle, string creatorHandle, string selectedWorkFlow, string taskType, string[] attributes, string createWorkFlowTaskResult, string newHandle, object userState) {
            if ((this.createWorkFlowTaskOperationCompleted == null)) {
                this.createWorkFlowTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWorkFlowTaskOperationCompleted);
            }
            this.InvokeAsync("createWorkFlowTask", new object[] {
                        sid,
                        attrVals,
                        objectHandle,
                        creatorHandle,
                        selectedWorkFlow,
                        taskType,
                        attributes,
                        createWorkFlowTaskResult,
                        newHandle}, this.createWorkFlowTaskOperationCompleted, userState);
        }
        
        private void OncreateWorkFlowTaskOperationCompleted(object arg) {
            if ((this.createWorkFlowTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWorkFlowTaskCompleted(this, new createWorkFlowTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteWorkFlowTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string workFlowHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle) {
            this.Invoke("deleteWorkFlowTask", new object[] {
                        sid,
                        workFlowHandle,
                        objectHandle});
        }
        
        /// <remarks/>
        public void deleteWorkFlowTaskAsync(int sid, string workFlowHandle, string objectHandle) {
            this.deleteWorkFlowTaskAsync(sid, workFlowHandle, objectHandle, null);
        }
        
        /// <remarks/>
        public void deleteWorkFlowTaskAsync(int sid, string workFlowHandle, string objectHandle, object userState) {
            if ((this.deleteWorkFlowTaskOperationCompleted == null)) {
                this.deleteWorkFlowTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWorkFlowTaskOperationCompleted);
            }
            this.InvokeAsync("deleteWorkFlowTask", new object[] {
                        sid,
                        workFlowHandle,
                        objectHandle}, this.deleteWorkFlowTaskOperationCompleted, userState);
        }
        
        private void OndeleteWorkFlowTaskOperationCompleted(object arg) {
            if ((this.deleteWorkFlowTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWorkFlowTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createRequestReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creatorHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attrVals, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] propertyValues, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string template, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newRequestHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newRequestNumber) {
            object[] results = this.Invoke("createRequest", new object[] {
                        sid,
                        creatorHandle,
                        attrVals,
                        propertyValues,
                        template,
                        attributes,
                        newRequestHandle,
                        newRequestNumber});
            newRequestHandle = ((string)(results[1]));
            newRequestNumber = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createRequestAsync(int sid, string creatorHandle, string[] attrVals, string[] propertyValues, string template, string[] attributes, string newRequestHandle, string newRequestNumber) {
            this.createRequestAsync(sid, creatorHandle, attrVals, propertyValues, template, attributes, newRequestHandle, newRequestNumber, null);
        }
        
        /// <remarks/>
        public void createRequestAsync(int sid, string creatorHandle, string[] attrVals, string[] propertyValues, string template, string[] attributes, string newRequestHandle, string newRequestNumber, object userState) {
            if ((this.createRequestOperationCompleted == null)) {
                this.createRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRequestOperationCompleted);
            }
            this.InvokeAsync("createRequest", new object[] {
                        sid,
                        creatorHandle,
                        attrVals,
                        propertyValues,
                        template,
                        attributes,
                        newRequestHandle,
                        newRequestNumber}, this.createRequestOperationCompleted, userState);
        }
        
        private void OncreateRequestOperationCompleted(object arg) {
            if ((this.createRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRequestCompleted(this, new createRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createTicketReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createTicket([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string problem_type, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string asset, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string duplication_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newTicketHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newTicketNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string returnUserData, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string returnApplicationData) {
            object[] results = this.Invoke("createTicket", new object[] {
                        sid,
                        description,
                        problem_type,
                        userid,
                        asset,
                        duplication_id,
                        newTicketHandle,
                        newTicketNumber,
                        returnUserData,
                        returnApplicationData});
            newTicketHandle = ((string)(results[1]));
            newTicketNumber = ((string)(results[2]));
            returnUserData = ((string)(results[3]));
            returnApplicationData = ((string)(results[4]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createTicketAsync(int sid, string description, string problem_type, string userid, string asset, string duplication_id, string newTicketHandle, string newTicketNumber, string returnUserData, string returnApplicationData) {
            this.createTicketAsync(sid, description, problem_type, userid, asset, duplication_id, newTicketHandle, newTicketNumber, returnUserData, returnApplicationData, null);
        }
        
        /// <remarks/>
        public void createTicketAsync(int sid, string description, string problem_type, string userid, string asset, string duplication_id, string newTicketHandle, string newTicketNumber, string returnUserData, string returnApplicationData, object userState) {
            if ((this.createTicketOperationCompleted == null)) {
                this.createTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTicketOperationCompleted);
            }
            this.InvokeAsync("createTicket", new object[] {
                        sid,
                        description,
                        problem_type,
                        userid,
                        asset,
                        duplication_id,
                        newTicketHandle,
                        newTicketNumber,
                        returnUserData,
                        returnApplicationData}, this.createTicketOperationCompleted, userState);
        }
        
        private void OncreateTicketOperationCompleted(object arg) {
            if ((this.createTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTicketCompleted(this, new createTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createQuickTicketReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createQuickTicket([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string customerHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newTicketHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string newTicketNumber) {
            object[] results = this.Invoke("createQuickTicket", new object[] {
                        sid,
                        customerHandle,
                        description,
                        newTicketHandle,
                        newTicketNumber});
            newTicketHandle = ((string)(results[1]));
            newTicketNumber = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createQuickTicketAsync(int sid, string customerHandle, string description, string newTicketHandle, string newTicketNumber) {
            this.createQuickTicketAsync(sid, customerHandle, description, newTicketHandle, newTicketNumber, null);
        }
        
        /// <remarks/>
        public void createQuickTicketAsync(int sid, string customerHandle, string description, string newTicketHandle, string newTicketNumber, object userState) {
            if ((this.createQuickTicketOperationCompleted == null)) {
                this.createQuickTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateQuickTicketOperationCompleted);
            }
            this.InvokeAsync("createQuickTicket", new object[] {
                        sid,
                        customerHandle,
                        description,
                        newTicketHandle,
                        newTicketNumber}, this.createQuickTicketOperationCompleted, userState);
        }
        
        private void OncreateQuickTicketOperationCompleted(object arg) {
            if ((this.createQuickTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createQuickTicketCompleted(this, new createQuickTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("closeTicketReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string closeTicket([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ticketHandle) {
            object[] results = this.Invoke("closeTicket", new object[] {
                        sid,
                        description,
                        ticketHandle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void closeTicketAsync(int sid, string description, string ticketHandle) {
            this.closeTicketAsync(sid, description, ticketHandle, null);
        }
        
        /// <remarks/>
        public void closeTicketAsync(int sid, string description, string ticketHandle, object userState) {
            if ((this.closeTicketOperationCompleted == null)) {
                this.closeTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseTicketOperationCompleted);
            }
            this.InvokeAsync("closeTicket", new object[] {
                        sid,
                        description,
                        ticketHandle}, this.closeTicketOperationCompleted, userState);
        }
        
        private void OncloseTicketOperationCompleted(object arg) {
            if ((this.closeTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeTicketCompleted(this, new closeTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logComment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ticketHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string comment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int internalFlag) {
            this.Invoke("logComment", new object[] {
                        sid,
                        ticketHandle,
                        comment,
                        internalFlag});
        }
        
        /// <remarks/>
        public void logCommentAsync(int sid, string ticketHandle, string comment, int internalFlag) {
            this.logCommentAsync(sid, ticketHandle, comment, internalFlag, null);
        }
        
        /// <remarks/>
        public void logCommentAsync(int sid, string ticketHandle, string comment, int internalFlag, object userState) {
            if ((this.logCommentOperationCompleted == null)) {
                this.logCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogCommentOperationCompleted);
            }
            this.InvokeAsync("logComment", new object[] {
                        sid,
                        ticketHandle,
                        comment,
                        internalFlag}, this.logCommentOperationCompleted, userState);
        }
        
        private void OnlogCommentOperationCompleted(object arg) {
            if ((this.logCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getPolicyInfoReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPolicyInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            object[] results = this.Invoke("getPolicyInfo", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPolicyInfoAsync(int sid) {
            this.getPolicyInfoAsync(sid, null);
        }
        
        /// <remarks/>
        public void getPolicyInfoAsync(int sid, object userState) {
            if ((this.getPolicyInfoOperationCompleted == null)) {
                this.getPolicyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPolicyInfoOperationCompleted);
            }
            this.InvokeAsync("getPolicyInfo", new object[] {
                        sid}, this.getPolicyInfoOperationCompleted, userState);
        }
        
        private void OngetPolicyInfoOperationCompleted(object arg) {
            if ((this.getPolicyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPolicyInfoCompleted(this, new getPolicyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("detachChangeFromRequestReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string detachChangeFromRequest([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string requestHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description) {
            object[] results = this.Invoke("detachChangeFromRequest", new object[] {
                        sid,
                        creator,
                        requestHandle,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void detachChangeFromRequestAsync(int sid, string creator, string requestHandle, string description) {
            this.detachChangeFromRequestAsync(sid, creator, requestHandle, description, null);
        }
        
        /// <remarks/>
        public void detachChangeFromRequestAsync(int sid, string creator, string requestHandle, string description, object userState) {
            if ((this.detachChangeFromRequestOperationCompleted == null)) {
                this.detachChangeFromRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OndetachChangeFromRequestOperationCompleted);
            }
            this.InvokeAsync("detachChangeFromRequest", new object[] {
                        sid,
                        creator,
                        requestHandle,
                        description}, this.detachChangeFromRequestOperationCompleted, userState);
        }
        
        private void OndetachChangeFromRequestOperationCompleted(object arg) {
            if ((this.detachChangeFromRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.detachChangeFromRequestCompleted(this, new detachChangeFromRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("doSelectReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string doSelect([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string whereClause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int maxRows, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("doSelect", new object[] {
                        sid,
                        objectType,
                        whereClause,
                        maxRows,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doSelectAsync(int sid, string objectType, string whereClause, int maxRows, string[] attributes) {
            this.doSelectAsync(sid, objectType, whereClause, maxRows, attributes, null);
        }
        
        /// <remarks/>
        public void doSelectAsync(int sid, string objectType, string whereClause, int maxRows, string[] attributes, object userState) {
            if ((this.doSelectOperationCompleted == null)) {
                this.doSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSelectOperationCompleted);
            }
            this.InvokeAsync("doSelect", new object[] {
                        sid,
                        objectType,
                        whereClause,
                        maxRows,
                        attributes}, this.doSelectOperationCompleted, userState);
        }
        
        private void OndoSelectOperationCompleted(object arg) {
            if ((this.doSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSelectCompleted(this, new doSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("doQueryReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListResult doQuery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string whereClause) {
            object[] results = this.Invoke("doQuery", new object[] {
                        sid,
                        objectType,
                        whereClause});
            return ((ListResult)(results[0]));
        }
        
        /// <remarks/>
        public void doQueryAsync(int sid, string objectType, string whereClause) {
            this.doQueryAsync(sid, objectType, whereClause, null);
        }
        
        /// <remarks/>
        public void doQueryAsync(int sid, string objectType, string whereClause, object userState) {
            if ((this.doQueryOperationCompleted == null)) {
                this.doQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoQueryOperationCompleted);
            }
            this.InvokeAsync("doQuery", new object[] {
                        sid,
                        objectType,
                        whereClause}, this.doQueryOperationCompleted, userState);
        }
        
        private void OndoQueryOperationCompleted(object arg) {
            if ((this.doQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doQueryCompleted(this, new doQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("escalateReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string escalate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool setAssignee, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newAssigneeHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool setGroup, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newGroupHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool setOrganization, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newOrganizationHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool setPriority, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newPriorityHandle) {
            object[] results = this.Invoke("escalate", new object[] {
                        sid,
                        creator,
                        objectHandle,
                        description,
                        setAssignee,
                        newAssigneeHandle,
                        setGroup,
                        newGroupHandle,
                        setOrganization,
                        newOrganizationHandle,
                        setPriority,
                        newPriorityHandle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void escalateAsync(int sid, string creator, string objectHandle, string description, bool setAssignee, string newAssigneeHandle, bool setGroup, string newGroupHandle, bool setOrganization, string newOrganizationHandle, bool setPriority, string newPriorityHandle) {
            this.escalateAsync(sid, creator, objectHandle, description, setAssignee, newAssigneeHandle, setGroup, newGroupHandle, setOrganization, newOrganizationHandle, setPriority, newPriorityHandle, null);
        }
        
        /// <remarks/>
        public void escalateAsync(int sid, string creator, string objectHandle, string description, bool setAssignee, string newAssigneeHandle, bool setGroup, string newGroupHandle, bool setOrganization, string newOrganizationHandle, bool setPriority, string newPriorityHandle, object userState) {
            if ((this.escalateOperationCompleted == null)) {
                this.escalateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnescalateOperationCompleted);
            }
            this.InvokeAsync("escalate", new object[] {
                        sid,
                        creator,
                        objectHandle,
                        description,
                        setAssignee,
                        newAssigneeHandle,
                        setGroup,
                        newGroupHandle,
                        setOrganization,
                        newOrganizationHandle,
                        setPriority,
                        newPriorityHandle}, this.escalateOperationCompleted, userState);
        }
        
        private void OnescalateOperationCompleted(object arg) {
            if ((this.escalateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.escalateCompleted(this, new escalateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void freeListHandles([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("integer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Nullable<int>[] handles) {
            this.Invoke("freeListHandles", new object[] {
                        sid,
                        handles});
        }
        
        /// <remarks/>
        public void freeListHandlesAsync(int sid, System.Nullable<int>[] handles) {
            this.freeListHandlesAsync(sid, handles, null);
        }
        
        /// <remarks/>
        public void freeListHandlesAsync(int sid, System.Nullable<int>[] handles, object userState) {
            if ((this.freeListHandlesOperationCompleted == null)) {
                this.freeListHandlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfreeListHandlesOperationCompleted);
            }
            this.InvokeAsync("freeListHandles", new object[] {
                        sid,
                        handles}, this.freeListHandlesOperationCompleted, userState);
        }
        
        private void OnfreeListHandlesOperationCompleted(object arg) {
            if ((this.freeListHandlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.freeListHandlesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getAssetExtensionInformation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string assetHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string getAssetExtInfoResult, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string extensionHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string extensionName) {
            object[] results = this.Invoke("getAssetExtensionInformation", new object[] {
                        sid,
                        assetHandle,
                        attributes,
                        getAssetExtInfoResult,
                        extensionHandle,
                        extensionName});
            getAssetExtInfoResult = ((string)(results[0]));
            extensionHandle = ((string)(results[1]));
            extensionName = ((string)(results[2]));
        }
        
        /// <remarks/>
        public void getAssetExtensionInformationAsync(int sid, string assetHandle, string[] attributes, string getAssetExtInfoResult, string extensionHandle, string extensionName) {
            this.getAssetExtensionInformationAsync(sid, assetHandle, attributes, getAssetExtInfoResult, extensionHandle, extensionName, null);
        }
        
        /// <remarks/>
        public void getAssetExtensionInformationAsync(int sid, string assetHandle, string[] attributes, string getAssetExtInfoResult, string extensionHandle, string extensionName, object userState) {
            if ((this.getAssetExtensionInformationOperationCompleted == null)) {
                this.getAssetExtensionInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssetExtensionInformationOperationCompleted);
            }
            this.InvokeAsync("getAssetExtensionInformation", new object[] {
                        sid,
                        assetHandle,
                        attributes,
                        getAssetExtInfoResult,
                        extensionHandle,
                        extensionName}, this.getAssetExtensionInformationOperationCompleted, userState);
        }
        
        private void OngetAssetExtensionInformationOperationCompleted(object arg) {
            if ((this.getAssetExtensionInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssetExtensionInformationCompleted(this, new getAssetExtensionInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getConfigurationModeReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getConfigurationMode([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            object[] results = this.Invoke("getConfigurationMode", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getConfigurationModeAsync(int sid) {
            this.getConfigurationModeAsync(sid, null);
        }
        
        /// <remarks/>
        public void getConfigurationModeAsync(int sid, object userState) {
            if ((this.getConfigurationModeOperationCompleted == null)) {
                this.getConfigurationModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConfigurationModeOperationCompleted);
            }
            this.InvokeAsync("getConfigurationMode", new object[] {
                        sid}, this.getConfigurationModeOperationCompleted, userState);
        }
        
        private void OngetConfigurationModeOperationCompleted(object arg) {
            if ((this.getConfigurationModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConfigurationModeCompleted(this, new getConfigurationModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getGroupMemberListValuesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getGroupMemberListValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string whereClause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numToFetch, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("getGroupMemberListValues", new object[] {
                        sid,
                        whereClause,
                        numToFetch,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGroupMemberListValuesAsync(int sid, string whereClause, int numToFetch, string[] attributes) {
            this.getGroupMemberListValuesAsync(sid, whereClause, numToFetch, attributes, null);
        }
        
        /// <remarks/>
        public void getGroupMemberListValuesAsync(int sid, string whereClause, int numToFetch, string[] attributes, object userState) {
            if ((this.getGroupMemberListValuesOperationCompleted == null)) {
                this.getGroupMemberListValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupMemberListValuesOperationCompleted);
            }
            this.InvokeAsync("getGroupMemberListValues", new object[] {
                        sid,
                        whereClause,
                        numToFetch,
                        attributes}, this.getGroupMemberListValuesOperationCompleted, userState);
        }
        
        private void OngetGroupMemberListValuesOperationCompleted(object arg) {
            if ((this.getGroupMemberListValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupMemberListValuesCompleted(this, new getGroupMemberListValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getObjectTypeInformationReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getObjectTypeInformation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string factory) {
            object[] results = this.Invoke("getObjectTypeInformation", new object[] {
                        sid,
                        factory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getObjectTypeInformationAsync(int sid, string factory) {
            this.getObjectTypeInformationAsync(sid, factory, null);
        }
        
        /// <remarks/>
        public void getObjectTypeInformationAsync(int sid, string factory, object userState) {
            if ((this.getObjectTypeInformationOperationCompleted == null)) {
                this.getObjectTypeInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetObjectTypeInformationOperationCompleted);
            }
            this.InvokeAsync("getObjectTypeInformation", new object[] {
                        sid,
                        factory}, this.getObjectTypeInformationOperationCompleted, userState);
        }
        
        private void OngetObjectTypeInformationOperationCompleted(object arg) {
            if ((this.getObjectTypeInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getObjectTypeInformationCompleted(this, new getObjectTypeInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getHandleForUseridReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getHandleForUserid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userID) {
            object[] results = this.Invoke("getHandleForUserid", new object[] {
                        sid,
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getHandleForUseridAsync(int sid, string userID) {
            this.getHandleForUseridAsync(sid, userID, null);
        }
        
        /// <remarks/>
        public void getHandleForUseridAsync(int sid, string userID, object userState) {
            if ((this.getHandleForUseridOperationCompleted == null)) {
                this.getHandleForUseridOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHandleForUseridOperationCompleted);
            }
            this.InvokeAsync("getHandleForUserid", new object[] {
                        sid,
                        userID}, this.getHandleForUseridOperationCompleted, userState);
        }
        
        private void OngetHandleForUseridOperationCompleted(object arg) {
            if ((this.getHandleForUseridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHandleForUseridCompleted(this, new getHandleForUseridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAccessTypeForContactReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAccessTypeForContact([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactHandle) {
            object[] results = this.Invoke("getAccessTypeForContact", new object[] {
                        sid,
                        contactHandle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAccessTypeForContactAsync(int sid, string contactHandle) {
            this.getAccessTypeForContactAsync(sid, contactHandle, null);
        }
        
        /// <remarks/>
        public void getAccessTypeForContactAsync(int sid, string contactHandle, object userState) {
            if ((this.getAccessTypeForContactOperationCompleted == null)) {
                this.getAccessTypeForContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessTypeForContactOperationCompleted);
            }
            this.InvokeAsync("getAccessTypeForContact", new object[] {
                        sid,
                        contactHandle}, this.getAccessTypeForContactOperationCompleted, userState);
        }
        
        private void OngetAccessTypeForContactOperationCompleted(object arg) {
            if ((this.getAccessTypeForContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessTypeForContactCompleted(this, new getAccessTypeForContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getListValuesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getListValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int listHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startIndex, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endIndex, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributeNames) {
            object[] results = this.Invoke("getListValues", new object[] {
                        sid,
                        listHandle,
                        startIndex,
                        endIndex,
                        attributeNames});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getListValuesAsync(int sid, int listHandle, int startIndex, int endIndex, string[] attributeNames) {
            this.getListValuesAsync(sid, listHandle, startIndex, endIndex, attributeNames, null);
        }
        
        /// <remarks/>
        public void getListValuesAsync(int sid, int listHandle, int startIndex, int endIndex, string[] attributeNames, object userState) {
            if ((this.getListValuesOperationCompleted == null)) {
                this.getListValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListValuesOperationCompleted);
            }
            this.InvokeAsync("getListValues", new object[] {
                        sid,
                        listHandle,
                        startIndex,
                        endIndex,
                        attributeNames}, this.getListValuesOperationCompleted, userState);
        }
        
        private void OngetListValuesOperationCompleted(object arg) {
            if ((this.getListValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListValuesCompleted(this, new getListValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getLrelLengthReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getLrelLength([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contextObject, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lrelName) {
            object[] results = this.Invoke("getLrelLength", new object[] {
                        sid,
                        contextObject,
                        lrelName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getLrelLengthAsync(int sid, string contextObject, string lrelName) {
            this.getLrelLengthAsync(sid, contextObject, lrelName, null);
        }
        
        /// <remarks/>
        public void getLrelLengthAsync(int sid, string contextObject, string lrelName, object userState) {
            if ((this.getLrelLengthOperationCompleted == null)) {
                this.getLrelLengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLrelLengthOperationCompleted);
            }
            this.InvokeAsync("getLrelLength", new object[] {
                        sid,
                        contextObject,
                        lrelName}, this.getLrelLengthOperationCompleted, userState);
        }
        
        private void OngetLrelLengthOperationCompleted(object arg) {
            if ((this.getLrelLengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLrelLengthCompleted(this, new getLrelLengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getLrelValuesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getLrelValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contextObject, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lrelName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startIndex, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endIndex, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("getLrelValues", new object[] {
                        sid,
                        contextObject,
                        lrelName,
                        startIndex,
                        endIndex,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLrelValuesAsync(int sid, string contextObject, string lrelName, int startIndex, int endIndex, string[] attributes) {
            this.getLrelValuesAsync(sid, contextObject, lrelName, startIndex, endIndex, attributes, null);
        }
        
        /// <remarks/>
        public void getLrelValuesAsync(int sid, string contextObject, string lrelName, int startIndex, int endIndex, string[] attributes, object userState) {
            if ((this.getLrelValuesOperationCompleted == null)) {
                this.getLrelValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLrelValuesOperationCompleted);
            }
            this.InvokeAsync("getLrelValues", new object[] {
                        sid,
                        contextObject,
                        lrelName,
                        startIndex,
                        endIndex,
                        attributes}, this.getLrelValuesOperationCompleted, userState);
        }
        
        private void OngetLrelValuesOperationCompleted(object arg) {
            if ((this.getLrelValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLrelValuesCompleted(this, new getLrelValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getNotificationsForContactReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListResult getNotificationsForContact([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int queryStatus) {
            object[] results = this.Invoke("getNotificationsForContact", new object[] {
                        sid,
                        contactHandle,
                        queryStatus});
            return ((ListResult)(results[0]));
        }
        
        /// <remarks/>
        public void getNotificationsForContactAsync(int sid, string contactHandle, int queryStatus) {
            this.getNotificationsForContactAsync(sid, contactHandle, queryStatus, null);
        }
        
        /// <remarks/>
        public void getNotificationsForContactAsync(int sid, string contactHandle, int queryStatus, object userState) {
            if ((this.getNotificationsForContactOperationCompleted == null)) {
                this.getNotificationsForContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotificationsForContactOperationCompleted);
            }
            this.InvokeAsync("getNotificationsForContact", new object[] {
                        sid,
                        contactHandle,
                        queryStatus}, this.getNotificationsForContactOperationCompleted, userState);
        }
        
        private void OngetNotificationsForContactOperationCompleted(object arg) {
            if ((this.getNotificationsForContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotificationsForContactCompleted(this, new getNotificationsForContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getObjectValuesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getObjectValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("getObjectValues", new object[] {
                        sid,
                        objectHandle,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getObjectValuesAsync(int sid, string objectHandle, string[] attributes) {
            this.getObjectValuesAsync(sid, objectHandle, attributes, null);
        }
        
        /// <remarks/>
        public void getObjectValuesAsync(int sid, string objectHandle, string[] attributes, object userState) {
            if ((this.getObjectValuesOperationCompleted == null)) {
                this.getObjectValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetObjectValuesOperationCompleted);
            }
            this.InvokeAsync("getObjectValues", new object[] {
                        sid,
                        objectHandle,
                        attributes}, this.getObjectValuesOperationCompleted, userState);
        }
        
        private void OngetObjectValuesOperationCompleted(object arg) {
            if ((this.getObjectValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getObjectValuesCompleted(this, new getObjectValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getPendingChangeTaskListForContactReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListResult getPendingChangeTaskListForContact([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactHandle) {
            object[] results = this.Invoke("getPendingChangeTaskListForContact", new object[] {
                        sid,
                        contactHandle});
            return ((ListResult)(results[0]));
        }
        
        /// <remarks/>
        public void getPendingChangeTaskListForContactAsync(int sid, string contactHandle) {
            this.getPendingChangeTaskListForContactAsync(sid, contactHandle, null);
        }
        
        /// <remarks/>
        public void getPendingChangeTaskListForContactAsync(int sid, string contactHandle, object userState) {
            if ((this.getPendingChangeTaskListForContactOperationCompleted == null)) {
                this.getPendingChangeTaskListForContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPendingChangeTaskListForContactOperationCompleted);
            }
            this.InvokeAsync("getPendingChangeTaskListForContact", new object[] {
                        sid,
                        contactHandle}, this.getPendingChangeTaskListForContactOperationCompleted, userState);
        }
        
        private void OngetPendingChangeTaskListForContactOperationCompleted(object arg) {
            if ((this.getPendingChangeTaskListForContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPendingChangeTaskListForContactCompleted(this, new getPendingChangeTaskListForContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getPendingIssueTaskListForContactReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListResult getPendingIssueTaskListForContact([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactHandle) {
            object[] results = this.Invoke("getPendingIssueTaskListForContact", new object[] {
                        sid,
                        contactHandle});
            return ((ListResult)(results[0]));
        }
        
        /// <remarks/>
        public void getPendingIssueTaskListForContactAsync(int sid, string contactHandle) {
            this.getPendingIssueTaskListForContactAsync(sid, contactHandle, null);
        }
        
        /// <remarks/>
        public void getPendingIssueTaskListForContactAsync(int sid, string contactHandle, object userState) {
            if ((this.getPendingIssueTaskListForContactOperationCompleted == null)) {
                this.getPendingIssueTaskListForContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPendingIssueTaskListForContactOperationCompleted);
            }
            this.InvokeAsync("getPendingIssueTaskListForContact", new object[] {
                        sid,
                        contactHandle}, this.getPendingIssueTaskListForContactOperationCompleted, userState);
        }
        
        private void OngetPendingIssueTaskListForContactOperationCompleted(object arg) {
            if ((this.getPendingIssueTaskListForContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPendingIssueTaskListForContactCompleted(this, new getPendingIssueTaskListForContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getPropertyInfoForCategoryReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPropertyInfoForCategory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string categoryHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("getPropertyInfoForCategory", new object[] {
                        sid,
                        categoryHandle,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPropertyInfoForCategoryAsync(int sid, string categoryHandle, string[] attributes) {
            this.getPropertyInfoForCategoryAsync(sid, categoryHandle, attributes, null);
        }
        
        /// <remarks/>
        public void getPropertyInfoForCategoryAsync(int sid, string categoryHandle, string[] attributes, object userState) {
            if ((this.getPropertyInfoForCategoryOperationCompleted == null)) {
                this.getPropertyInfoForCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPropertyInfoForCategoryOperationCompleted);
            }
            this.InvokeAsync("getPropertyInfoForCategory", new object[] {
                        sid,
                        categoryHandle,
                        attributes}, this.getPropertyInfoForCategoryOperationCompleted, userState);
        }
        
        private void OngetPropertyInfoForCategoryOperationCompleted(object arg) {
            if ((this.getPropertyInfoForCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPropertyInfoForCategoryCompleted(this, new getPropertyInfoForCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRelatedListReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListResult getRelatedList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string listName) {
            object[] results = this.Invoke("getRelatedList", new object[] {
                        sid,
                        objectHandle,
                        listName});
            return ((ListResult)(results[0]));
        }
        
        /// <remarks/>
        public void getRelatedListAsync(int sid, string objectHandle, string listName) {
            this.getRelatedListAsync(sid, objectHandle, listName, null);
        }
        
        /// <remarks/>
        public void getRelatedListAsync(int sid, string objectHandle, string listName, object userState) {
            if ((this.getRelatedListOperationCompleted == null)) {
                this.getRelatedListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRelatedListOperationCompleted);
            }
            this.InvokeAsync("getRelatedList", new object[] {
                        sid,
                        objectHandle,
                        listName}, this.getRelatedListOperationCompleted, userState);
        }
        
        private void OngetRelatedListOperationCompleted(object arg) {
            if ((this.getRelatedListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRelatedListCompleted(this, new getRelatedListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getRelatedListValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string listName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numToFetch, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string getRelatedListValuesResult, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref int numRowsFound) {
            object[] results = this.Invoke("getRelatedListValues", new object[] {
                        sid,
                        objectHandle,
                        listName,
                        numToFetch,
                        attributes,
                        getRelatedListValuesResult,
                        numRowsFound});
            getRelatedListValuesResult = ((string)(results[0]));
            numRowsFound = ((int)(results[1]));
        }
        
        /// <remarks/>
        public void getRelatedListValuesAsync(int sid, string objectHandle, string listName, int numToFetch, string[] attributes, string getRelatedListValuesResult, int numRowsFound) {
            this.getRelatedListValuesAsync(sid, objectHandle, listName, numToFetch, attributes, getRelatedListValuesResult, numRowsFound, null);
        }
        
        /// <remarks/>
        public void getRelatedListValuesAsync(int sid, string objectHandle, string listName, int numToFetch, string[] attributes, string getRelatedListValuesResult, int numRowsFound, object userState) {
            if ((this.getRelatedListValuesOperationCompleted == null)) {
                this.getRelatedListValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRelatedListValuesOperationCompleted);
            }
            this.InvokeAsync("getRelatedListValues", new object[] {
                        sid,
                        objectHandle,
                        listName,
                        numToFetch,
                        attributes,
                        getRelatedListValuesResult,
                        numRowsFound}, this.getRelatedListValuesOperationCompleted, userState);
        }
        
        private void OngetRelatedListValuesOperationCompleted(object arg) {
            if ((this.getRelatedListValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRelatedListValuesCompleted(this, new getRelatedListValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getWorkFlowTemplatesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getWorkFlowTemplates([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("getWorkFlowTemplates", new object[] {
                        sid,
                        objectHandle,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkFlowTemplatesAsync(int sid, string objectHandle, string[] attributes) {
            this.getWorkFlowTemplatesAsync(sid, objectHandle, attributes, null);
        }
        
        /// <remarks/>
        public void getWorkFlowTemplatesAsync(int sid, string objectHandle, string[] attributes, object userState) {
            if ((this.getWorkFlowTemplatesOperationCompleted == null)) {
                this.getWorkFlowTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkFlowTemplatesOperationCompleted);
            }
            this.InvokeAsync("getWorkFlowTemplates", new object[] {
                        sid,
                        objectHandle,
                        attributes}, this.getWorkFlowTemplatesOperationCompleted, userState);
        }
        
        private void OngetWorkFlowTemplatesOperationCompleted(object arg) {
            if ((this.getWorkFlowTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkFlowTemplatesCompleted(this, new getWorkFlowTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTaskListValuesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getTaskListValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("getTaskListValues", new object[] {
                        sid,
                        objectHandle,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTaskListValuesAsync(int sid, string objectHandle, string[] attributes) {
            this.getTaskListValuesAsync(sid, objectHandle, attributes, null);
        }
        
        /// <remarks/>
        public void getTaskListValuesAsync(int sid, string objectHandle, string[] attributes, object userState) {
            if ((this.getTaskListValuesOperationCompleted == null)) {
                this.getTaskListValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskListValuesOperationCompleted);
            }
            this.InvokeAsync("getTaskListValues", new object[] {
                        sid,
                        objectHandle,
                        attributes}, this.getTaskListValuesOperationCompleted, userState);
        }
        
        private void OngetTaskListValuesOperationCompleted(object arg) {
            if ((this.getTaskListValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskListValuesCompleted(this, new getTaskListValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getValidTaskTransitionsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getValidTaskTransitions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string taskHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("getValidTaskTransitions", new object[] {
                        sid,
                        taskHandle,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getValidTaskTransitionsAsync(int sid, string taskHandle, string[] attributes) {
            this.getValidTaskTransitionsAsync(sid, taskHandle, attributes, null);
        }
        
        /// <remarks/>
        public void getValidTaskTransitionsAsync(int sid, string taskHandle, string[] attributes, object userState) {
            if ((this.getValidTaskTransitionsOperationCompleted == null)) {
                this.getValidTaskTransitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetValidTaskTransitionsOperationCompleted);
            }
            this.InvokeAsync("getValidTaskTransitions", new object[] {
                        sid,
                        taskHandle,
                        attributes}, this.getValidTaskTransitionsOperationCompleted, userState);
        }
        
        private void OngetValidTaskTransitionsOperationCompleted(object arg) {
            if ((this.getValidTaskTransitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getValidTaskTransitionsCompleted(this, new getValidTaskTransitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getValidTransitionsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getValidTransitions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string handle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ticketFactory) {
            object[] results = this.Invoke("getValidTransitions", new object[] {
                        sid,
                        handle,
                        ticketFactory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getValidTransitionsAsync(int sid, string handle, string ticketFactory) {
            this.getValidTransitionsAsync(sid, handle, ticketFactory, null);
        }
        
        /// <remarks/>
        public void getValidTransitionsAsync(int sid, string handle, string ticketFactory, object userState) {
            if ((this.getValidTransitionsOperationCompleted == null)) {
                this.getValidTransitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetValidTransitionsOperationCompleted);
            }
            this.InvokeAsync("getValidTransitions", new object[] {
                        sid,
                        handle,
                        ticketFactory}, this.getValidTransitionsOperationCompleted, userState);
        }
        
        private void OngetValidTransitionsOperationCompleted(object arg) {
            if ((this.getValidTransitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getValidTransitionsCompleted(this, new getValidTransitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDependentAttrControlsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDependentAttrControls([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string handle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attrVals) {
            object[] results = this.Invoke("getDependentAttrControls", new object[] {
                        sid,
                        handle,
                        attrVals});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDependentAttrControlsAsync(int sid, string handle, string[] attrVals) {
            this.getDependentAttrControlsAsync(sid, handle, attrVals, null);
        }
        
        /// <remarks/>
        public void getDependentAttrControlsAsync(int sid, string handle, string[] attrVals, object userState) {
            if ((this.getDependentAttrControlsOperationCompleted == null)) {
                this.getDependentAttrControlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDependentAttrControlsOperationCompleted);
            }
            this.InvokeAsync("getDependentAttrControls", new object[] {
                        sid,
                        handle,
                        attrVals}, this.getDependentAttrControlsOperationCompleted, userState);
        }
        
        private void OngetDependentAttrControlsOperationCompleted(object arg) {
            if ((this.getDependentAttrControlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDependentAttrControlsCompleted(this, new getDependentAttrControlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("loginReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int login([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            object[] results = this.Invoke("login", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string username, string password) {
            this.loginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string username, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        username,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("loginServiceReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int loginService([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string policy) {
            object[] results = this.Invoke("loginService", new object[] {
                        username,
                        password,
                        policy});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void loginServiceAsync(string username, string password, string policy) {
            this.loginServiceAsync(username, password, policy, null);
        }
        
        /// <remarks/>
        public void loginServiceAsync(string username, string password, string policy, object userState) {
            if ((this.loginServiceOperationCompleted == null)) {
                this.loginServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginServiceOperationCompleted);
            }
            this.InvokeAsync("loginService", new object[] {
                        username,
                        password,
                        policy}, this.loginServiceOperationCompleted, userState);
        }
        
        private void OnloginServiceOperationCompleted(object arg) {
            if ((this.loginServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginServiceCompleted(this, new loginServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("loginServiceManagedReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loginServiceManaged([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string policy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string encrypted_policy) {
            object[] results = this.Invoke("loginServiceManaged", new object[] {
                        policy,
                        encrypted_policy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginServiceManagedAsync(string policy, string encrypted_policy) {
            this.loginServiceManagedAsync(policy, encrypted_policy, null);
        }
        
        /// <remarks/>
        public void loginServiceManagedAsync(string policy, string encrypted_policy, object userState) {
            if ((this.loginServiceManagedOperationCompleted == null)) {
                this.loginServiceManagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginServiceManagedOperationCompleted);
            }
            this.InvokeAsync("loginServiceManaged", new object[] {
                        policy,
                        encrypted_policy}, this.loginServiceManagedOperationCompleted, userState);
        }
        
        private void OnloginServiceManagedOperationCompleted(object arg) {
            if ((this.loginServiceManagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginServiceManagedCompleted(this, new loginServiceManagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("loginWithArtifactReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int loginWithArtifact([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string artifact) {
            object[] results = this.Invoke("loginWithArtifact", new object[] {
                        userid,
                        artifact});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void loginWithArtifactAsync(string userid, string artifact) {
            this.loginWithArtifactAsync(userid, artifact, null);
        }
        
        /// <remarks/>
        public void loginWithArtifactAsync(string userid, string artifact, object userState) {
            if ((this.loginWithArtifactOperationCompleted == null)) {
                this.loginWithArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginWithArtifactOperationCompleted);
            }
            this.InvokeAsync("loginWithArtifact", new object[] {
                        userid,
                        artifact}, this.loginWithArtifactOperationCompleted, userState);
        }
        
        private void OnloginWithArtifactOperationCompleted(object arg) {
            if ((this.loginWithArtifactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginWithArtifactCompleted(this, new loginWithArtifactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("impersonateReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int impersonate([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userid) {
            object[] results = this.Invoke("impersonate", new object[] {
                        sid,
                        userid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void impersonateAsync(int sid, string userid) {
            this.impersonateAsync(sid, userid, null);
        }
        
        /// <remarks/>
        public void impersonateAsync(int sid, string userid, object userState) {
            if ((this.impersonateOperationCompleted == null)) {
                this.impersonateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimpersonateOperationCompleted);
            }
            this.InvokeAsync("impersonate", new object[] {
                        sid,
                        userid}, this.impersonateOperationCompleted, userState);
        }
        
        private void OnimpersonateOperationCompleted(object arg) {
            if ((this.impersonateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.impersonateCompleted(this, new impersonateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logout([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            this.Invoke("logout", new object[] {
                        sid});
        }
        
        /// <remarks/>
        public void logoutAsync(int sid) {
            this.logoutAsync(sid, null);
        }
        
        /// <remarks/>
        public void logoutAsync(int sid, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        sid}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("notifyContactsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string notifyContacts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contextObject, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string messageTitle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string messageBody, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int notifyLevel, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] notifyees, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool @internal) {
            object[] results = this.Invoke("notifyContacts", new object[] {
                        sid,
                        creator,
                        contextObject,
                        messageTitle,
                        messageBody,
                        notifyLevel,
                        notifyees,
                        @internal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void notifyContactsAsync(int sid, string creator, string contextObject, string messageTitle, string messageBody, int notifyLevel, string[] notifyees, bool @internal) {
            this.notifyContactsAsync(sid, creator, contextObject, messageTitle, messageBody, notifyLevel, notifyees, @internal, null);
        }
        
        /// <remarks/>
        public void notifyContactsAsync(int sid, string creator, string contextObject, string messageTitle, string messageBody, int notifyLevel, string[] notifyees, bool @internal, object userState) {
            if ((this.notifyContactsOperationCompleted == null)) {
                this.notifyContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnotifyContactsOperationCompleted);
            }
            this.InvokeAsync("notifyContacts", new object[] {
                        sid,
                        creator,
                        contextObject,
                        messageTitle,
                        messageBody,
                        notifyLevel,
                        notifyees,
                        @internal}, this.notifyContactsOperationCompleted, userState);
        }
        
        private void OnnotifyContactsOperationCompleted(object arg) {
            if ((this.notifyContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.notifyContactsCompleted(this, new notifyContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeLrelRelationships([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contextObject, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lrelName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] removeObjectHandles) {
            this.Invoke("removeLrelRelationships", new object[] {
                        sid,
                        contextObject,
                        lrelName,
                        removeObjectHandles});
        }
        
        /// <remarks/>
        public void removeLrelRelationshipsAsync(int sid, string contextObject, string lrelName, string[] removeObjectHandles) {
            this.removeLrelRelationshipsAsync(sid, contextObject, lrelName, removeObjectHandles, null);
        }
        
        /// <remarks/>
        public void removeLrelRelationshipsAsync(int sid, string contextObject, string lrelName, string[] removeObjectHandles, object userState) {
            if ((this.removeLrelRelationshipsOperationCompleted == null)) {
                this.removeLrelRelationshipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveLrelRelationshipsOperationCompleted);
            }
            this.InvokeAsync("removeLrelRelationships", new object[] {
                        sid,
                        contextObject,
                        lrelName,
                        removeObjectHandles}, this.removeLrelRelationshipsOperationCompleted, userState);
        }
        
        private void OnremoveLrelRelationshipsOperationCompleted(object arg) {
            if ((this.removeLrelRelationshipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeLrelRelationshipsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeMemberFromGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string groupHandle) {
            this.Invoke("removeMemberFromGroup", new object[] {
                        sid,
                        contactHandle,
                        groupHandle});
        }
        
        /// <remarks/>
        public void removeMemberFromGroupAsync(int sid, string contactHandle, string groupHandle) {
            this.removeMemberFromGroupAsync(sid, contactHandle, groupHandle, null);
        }
        
        /// <remarks/>
        public void removeMemberFromGroupAsync(int sid, string contactHandle, string groupHandle, object userState) {
            if ((this.removeMemberFromGroupOperationCompleted == null)) {
                this.removeMemberFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveMemberFromGroupOperationCompleted);
            }
            this.InvokeAsync("removeMemberFromGroup", new object[] {
                        sid,
                        contactHandle,
                        groupHandle}, this.removeMemberFromGroupOperationCompleted, userState);
        }
        
        private void OnremoveMemberFromGroupOperationCompleted(object arg) {
            if ((this.removeMemberFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeMemberFromGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("serverStatusReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int serverStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            object[] results = this.Invoke("serverStatus", new object[] {
                        sid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void serverStatusAsync(int sid) {
            this.serverStatusAsync(sid, null);
        }
        
        /// <remarks/>
        public void serverStatusAsync(int sid, object userState) {
            if ((this.serverStatusOperationCompleted == null)) {
                this.serverStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnserverStatusOperationCompleted);
            }
            this.InvokeAsync("serverStatus", new object[] {
                        sid}, this.serverStatusOperationCompleted, userState);
        }
        
        private void OnserverStatusOperationCompleted(object arg) {
            if ((this.serverStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.serverStatusCompleted(this, new serverStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateObjectReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string updateObject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attrVals, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes) {
            object[] results = this.Invoke("updateObject", new object[] {
                        sid,
                        objectHandle,
                        attrVals,
                        attributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateObjectAsync(int sid, string objectHandle, string[] attrVals, string[] attributes) {
            this.updateObjectAsync(sid, objectHandle, attrVals, attributes, null);
        }
        
        /// <remarks/>
        public void updateObjectAsync(int sid, string objectHandle, string[] attrVals, string[] attributes, object userState) {
            if ((this.updateObjectOperationCompleted == null)) {
                this.updateObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateObjectOperationCompleted);
            }
            this.InvokeAsync("updateObject", new object[] {
                        sid,
                        objectHandle,
                        attrVals,
                        attributes}, this.updateObjectOperationCompleted, userState);
        }
        
        private void OnupdateObjectOperationCompleted(object arg) {
            if ((this.updateObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateObjectCompleted(this, new updateObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getBopsidReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getBopsid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contact) {
            object[] results = this.Invoke("getBopsid", new object[] {
                        sid,
                        contact});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBopsidAsync(int sid, string contact) {
            this.getBopsidAsync(sid, contact, null);
        }
        
        /// <remarks/>
        public void getBopsidAsync(int sid, string contact, object userState) {
            if ((this.getBopsidOperationCompleted == null)) {
                this.getBopsidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBopsidOperationCompleted);
            }
            this.InvokeAsync("getBopsid", new object[] {
                        sid,
                        contact}, this.getBopsidOperationCompleted, userState);
        }
        
        private void OngetBopsidOperationCompleted(object arg) {
            if ((this.getBopsidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBopsidCompleted(this, new getBopsidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getArtifactReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getArtifact([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contact, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passwd) {
            object[] results = this.Invoke("getArtifact", new object[] {
                        sid,
                        contact,
                        passwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getArtifactAsync(int sid, string contact, string passwd) {
            this.getArtifactAsync(sid, contact, passwd, null);
        }
        
        /// <remarks/>
        public void getArtifactAsync(int sid, string contact, string passwd, object userState) {
            if ((this.getArtifactOperationCompleted == null)) {
                this.getArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactOperationCompleted);
            }
            this.InvokeAsync("getArtifact", new object[] {
                        sid,
                        contact,
                        passwd}, this.getArtifactOperationCompleted, userState);
        }
        
        private void OngetArtifactOperationCompleted(object arg) {
            if ((this.getArtifactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getArtifactCompleted(this, new getArtifactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("attachURLLinkToTicketReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string attachURLLinkToTicket([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ticketHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string url, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string attmntName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description) {
            object[] results = this.Invoke("attachURLLinkToTicket", new object[] {
                        sid,
                        ticketHandle,
                        url,
                        attmntName,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void attachURLLinkToTicketAsync(int sid, string ticketHandle, string url, string attmntName, string description) {
            this.attachURLLinkToTicketAsync(sid, ticketHandle, url, attmntName, description, null);
        }
        
        /// <remarks/>
        public void attachURLLinkToTicketAsync(int sid, string ticketHandle, string url, string attmntName, string description, object userState) {
            if ((this.attachURLLinkToTicketOperationCompleted == null)) {
                this.attachURLLinkToTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnattachURLLinkToTicketOperationCompleted);
            }
            this.InvokeAsync("attachURLLinkToTicket", new object[] {
                        sid,
                        ticketHandle,
                        url,
                        attmntName,
                        description}, this.attachURLLinkToTicketOperationCompleted, userState);
        }
        
        private void OnattachURLLinkToTicketOperationCompleted(object arg) {
            if ((this.attachURLLinkToTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.attachURLLinkToTicketCompleted(this, new attachURLLinkToTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createAttmntReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createAttmnt([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string repositoryHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int folderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fileName) {
            object[] results = this.Invoke("createAttmnt", new object[] {
                        sid,
                        repositoryHandle,
                        folderId,
                        objectHandle,
                        description,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAttmntAsync(int sid, string repositoryHandle, int folderId, int objectHandle, string description, string fileName) {
            this.createAttmntAsync(sid, repositoryHandle, folderId, objectHandle, description, fileName, null);
        }
        
        /// <remarks/>
        public void createAttmntAsync(int sid, string repositoryHandle, int folderId, int objectHandle, string description, string fileName, object userState) {
            if ((this.createAttmntOperationCompleted == null)) {
                this.createAttmntOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAttmntOperationCompleted);
            }
            this.InvokeAsync("createAttmnt", new object[] {
                        sid,
                        repositoryHandle,
                        folderId,
                        objectHandle,
                        description,
                        fileName}, this.createAttmntOperationCompleted, userState);
        }
        
        private void OncreateAttmntOperationCompleted(object arg) {
            if ((this.createAttmntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAttmntCompleted(this, new createAttmntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDocumentsByIDsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDocumentsByIDs([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string docIds, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string propertyList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sortBy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool descending) {
            object[] results = this.Invoke("getDocumentsByIDs", new object[] {
                        sid,
                        docIds,
                        propertyList,
                        sortBy,
                        descending});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentsByIDsAsync(int sid, string docIds, string propertyList, string sortBy, bool descending) {
            this.getDocumentsByIDsAsync(sid, docIds, propertyList, sortBy, descending, null);
        }
        
        /// <remarks/>
        public void getDocumentsByIDsAsync(int sid, string docIds, string propertyList, string sortBy, bool descending, object userState) {
            if ((this.getDocumentsByIDsOperationCompleted == null)) {
                this.getDocumentsByIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentsByIDsOperationCompleted);
            }
            this.InvokeAsync("getDocumentsByIDs", new object[] {
                        sid,
                        docIds,
                        propertyList,
                        sortBy,
                        descending}, this.getDocumentsByIDsOperationCompleted, userState);
        }
        
        private void OngetDocumentsByIDsOperationCompleted(object arg) {
            if ((this.getDocumentsByIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentsByIDsCompleted(this, new getDocumentsByIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDecisionTreesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDecisionTrees([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string propertyList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sortBy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool descending) {
            object[] results = this.Invoke("getDecisionTrees", new object[] {
                        sid,
                        propertyList,
                        sortBy,
                        descending});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDecisionTreesAsync(int sid, string propertyList, string sortBy, bool descending) {
            this.getDecisionTreesAsync(sid, propertyList, sortBy, descending, null);
        }
        
        /// <remarks/>
        public void getDecisionTreesAsync(int sid, string propertyList, string sortBy, bool descending, object userState) {
            if ((this.getDecisionTreesOperationCompleted == null)) {
                this.getDecisionTreesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDecisionTreesOperationCompleted);
            }
            this.InvokeAsync("getDecisionTrees", new object[] {
                        sid,
                        propertyList,
                        sortBy,
                        descending}, this.getDecisionTreesOperationCompleted, userState);
        }
        
        private void OngetDecisionTreesOperationCompleted(object arg) {
            if ((this.getDecisionTreesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDecisionTreesCompleted(this, new getDecisionTreesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int deleteDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId) {
            object[] results = this.Invoke("deleteDocument", new object[] {
                        sid,
                        docId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDocumentAsync(int sid, int docId) {
            this.deleteDocumentAsync(sid, docId, null);
        }
        
        /// <remarks/>
        public void deleteDocumentAsync(int sid, int docId, object userState) {
            if ((this.deleteDocumentOperationCompleted == null)) {
                this.deleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("deleteDocument", new object[] {
                        sid,
                        docId}, this.deleteDocumentOperationCompleted, userState);
        }
        
        private void OndeleteDocumentOperationCompleted(object arg) {
            if ((this.deleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDocumentCompleted(this, new deleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCategoryReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getCategory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int catId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getCategoryPaths) {
            object[] results = this.Invoke("getCategory", new object[] {
                        sid,
                        catId,
                        getCategoryPaths});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCategoryAsync(int sid, int catId, bool getCategoryPaths) {
            this.getCategoryAsync(sid, catId, getCategoryPaths, null);
        }
        
        /// <remarks/>
        public void getCategoryAsync(int sid, int catId, bool getCategoryPaths, object userState) {
            if ((this.getCategoryOperationCompleted == null)) {
                this.getCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCategoryOperationCompleted);
            }
            this.InvokeAsync("getCategory", new object[] {
                        sid,
                        catId,
                        getCategoryPaths}, this.getCategoryOperationCompleted, userState);
        }
        
        private void OngetCategoryOperationCompleted(object arg) {
            if ((this.getCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCategoryCompleted(this, new getCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getStatusesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getStatuses([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            object[] results = this.Invoke("getStatuses", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusesAsync(int sid) {
            this.getStatusesAsync(sid, null);
        }
        
        /// <remarks/>
        public void getStatusesAsync(int sid, object userState) {
            if ((this.getStatusesOperationCompleted == null)) {
                this.getStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusesOperationCompleted);
            }
            this.InvokeAsync("getStatuses", new object[] {
                        sid}, this.getStatusesOperationCompleted, userState);
        }
        
        private void OngetStatusesOperationCompleted(object arg) {
            if ((this.getStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusesCompleted(this, new getStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getBookmarksReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getBookmarks([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactId) {
            object[] results = this.Invoke("getBookmarks", new object[] {
                        sid,
                        contactId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBookmarksAsync(int sid, string contactId) {
            this.getBookmarksAsync(sid, contactId, null);
        }
        
        /// <remarks/>
        public void getBookmarksAsync(int sid, string contactId, object userState) {
            if ((this.getBookmarksOperationCompleted == null)) {
                this.getBookmarksOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBookmarksOperationCompleted);
            }
            this.InvokeAsync("getBookmarks", new object[] {
                        sid,
                        contactId}, this.getBookmarksOperationCompleted, userState);
        }
        
        private void OngetBookmarksOperationCompleted(object arg) {
            if ((this.getBookmarksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBookmarksCompleted(this, new getBookmarksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getQuestionsAskedReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getQuestionsAsked([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int resultSize, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool descending) {
            object[] results = this.Invoke("getQuestionsAsked", new object[] {
                        sid,
                        resultSize,
                        descending});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getQuestionsAskedAsync(int sid, int resultSize, bool descending) {
            this.getQuestionsAskedAsync(sid, resultSize, descending, null);
        }
        
        /// <remarks/>
        public void getQuestionsAskedAsync(int sid, int resultSize, bool descending, object userState) {
            if ((this.getQuestionsAskedOperationCompleted == null)) {
                this.getQuestionsAskedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuestionsAskedOperationCompleted);
            }
            this.InvokeAsync("getQuestionsAsked", new object[] {
                        sid,
                        resultSize,
                        descending}, this.getQuestionsAskedOperationCompleted, userState);
        }
        
        private void OngetQuestionsAskedOperationCompleted(object arg) {
            if ((this.getQuestionsAskedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuestionsAskedCompleted(this, new getQuestionsAskedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getPrioritiesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPriorities([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            object[] results = this.Invoke("getPriorities", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPrioritiesAsync(int sid) {
            this.getPrioritiesAsync(sid, null);
        }
        
        /// <remarks/>
        public void getPrioritiesAsync(int sid, object userState) {
            if ((this.getPrioritiesOperationCompleted == null)) {
                this.getPrioritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrioritiesOperationCompleted);
            }
            this.InvokeAsync("getPriorities", new object[] {
                        sid}, this.getPrioritiesOperationCompleted, userState);
        }
        
        private void OngetPrioritiesOperationCompleted(object arg) {
            if ((this.getPrioritiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPrioritiesCompleted(this, new getPrioritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDocumentTypesReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDocumentTypes([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            object[] results = this.Invoke("getDocumentTypes", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentTypesAsync(int sid) {
            this.getDocumentTypesAsync(sid, null);
        }
        
        /// <remarks/>
        public void getDocumentTypesAsync(int sid, object userState) {
            if ((this.getDocumentTypesOperationCompleted == null)) {
                this.getDocumentTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentTypesOperationCompleted);
            }
            this.InvokeAsync("getDocumentTypes", new object[] {
                        sid}, this.getDocumentTypesOperationCompleted, userState);
        }
        
        private void OngetDocumentTypesOperationCompleted(object arg) {
            if ((this.getDocumentTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentTypesCompleted(this, new getDocumentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTemplateListReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getTemplateList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            object[] results = this.Invoke("getTemplateList", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTemplateListAsync(int sid) {
            this.getTemplateListAsync(sid, null);
        }
        
        /// <remarks/>
        public void getTemplateListAsync(int sid, object userState) {
            if ((this.getTemplateListOperationCompleted == null)) {
                this.getTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTemplateListOperationCompleted);
            }
            this.InvokeAsync("getTemplateList", new object[] {
                        sid}, this.getTemplateListOperationCompleted, userState);
        }
        
        private void OngetTemplateListOperationCompleted(object arg) {
            if ((this.getTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTemplateListCompleted(this, new getTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getWorkflowTemplateListReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getWorkflowTemplateList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid) {
            object[] results = this.Invoke("getWorkflowTemplateList", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowTemplateListAsync(int sid) {
            this.getWorkflowTemplateListAsync(sid, null);
        }
        
        /// <remarks/>
        public void getWorkflowTemplateListAsync(int sid, object userState) {
            if ((this.getWorkflowTemplateListOperationCompleted == null)) {
                this.getWorkflowTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowTemplateListOperationCompleted);
            }
            this.InvokeAsync("getWorkflowTemplateList", new object[] {
                        sid}, this.getWorkflowTemplateListOperationCompleted, userState);
        }
        
        private void OngetWorkflowTemplateListOperationCompleted(object arg) {
            if ((this.getWorkflowTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowTemplateListCompleted(this, new getWorkflowTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addCommentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addComment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string comment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string email, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactId) {
            object[] results = this.Invoke("addComment", new object[] {
                        sid,
                        comment,
                        docId,
                        email,
                        username,
                        contactId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCommentAsync(int sid, string comment, int docId, string email, string username, string contactId) {
            this.addCommentAsync(sid, comment, docId, email, username, contactId, null);
        }
        
        /// <remarks/>
        public void addCommentAsync(int sid, string comment, int docId, string email, string username, string contactId, object userState) {
            if ((this.addCommentOperationCompleted == null)) {
                this.addCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCommentOperationCompleted);
            }
            this.InvokeAsync("addComment", new object[] {
                        sid,
                        comment,
                        docId,
                        email,
                        username,
                        contactId}, this.addCommentOperationCompleted, userState);
        }
        
        private void OnaddCommentOperationCompleted(object arg) {
            if ((this.addCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCommentCompleted(this, new addCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteCommentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int deleteComment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int commentId) {
            object[] results = this.Invoke("deleteComment", new object[] {
                        sid,
                        commentId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCommentAsync(int sid, int commentId) {
            this.deleteCommentAsync(sid, commentId, null);
        }
        
        /// <remarks/>
        public void deleteCommentAsync(int sid, int commentId, object userState) {
            if ((this.deleteCommentOperationCompleted == null)) {
                this.deleteCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCommentOperationCompleted);
            }
            this.InvokeAsync("deleteComment", new object[] {
                        sid,
                        commentId}, this.deleteCommentOperationCompleted, userState);
        }
        
        private void OndeleteCommentOperationCompleted(object arg) {
            if ((this.deleteCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCommentCompleted(this, new deleteCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] kdAttributes) {
            object[] results = this.Invoke("createDocument", new object[] {
                        sid,
                        kdAttributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createDocumentAsync(int sid, string[] kdAttributes) {
            this.createDocumentAsync(sid, kdAttributes, null);
        }
        
        /// <remarks/>
        public void createDocumentAsync(int sid, string[] kdAttributes, object userState) {
            if ((this.createDocumentOperationCompleted == null)) {
                this.createDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDocumentOperationCompleted);
            }
            this.InvokeAsync("createDocument", new object[] {
                        sid,
                        kdAttributes}, this.createDocumentOperationCompleted, userState);
        }
        
        private void OncreateDocumentOperationCompleted(object arg) {
            if ((this.createDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDocumentCompleted(this, new createDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("modifyDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string modifyDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] kdAttributes) {
            object[] results = this.Invoke("modifyDocument", new object[] {
                        sid,
                        docId,
                        kdAttributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyDocumentAsync(int sid, int docId, string[] kdAttributes) {
            this.modifyDocumentAsync(sid, docId, kdAttributes, null);
        }
        
        /// <remarks/>
        public void modifyDocumentAsync(int sid, int docId, string[] kdAttributes, object userState) {
            if ((this.modifyDocumentOperationCompleted == null)) {
                this.modifyDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyDocumentOperationCompleted);
            }
            this.InvokeAsync("modifyDocument", new object[] {
                        sid,
                        docId,
                        kdAttributes}, this.modifyDocumentOperationCompleted, userState);
        }
        
        private void OnmodifyDocumentOperationCompleted(object arg) {
            if ((this.modifyDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyDocumentCompleted(this, new modifyDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("rateDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rateDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int rating, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int multiplier, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ticketPerId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool onTicketAccept, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool solveUserProblem, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isDefault) {
            object[] results = this.Invoke("rateDocument", new object[] {
                        sid,
                        docId,
                        rating,
                        multiplier,
                        ticketPerId,
                        onTicketAccept,
                        solveUserProblem,
                        isDefault});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rateDocumentAsync(int sid, int docId, int rating, int multiplier, string ticketPerId, bool onTicketAccept, bool solveUserProblem, bool isDefault) {
            this.rateDocumentAsync(sid, docId, rating, multiplier, ticketPerId, onTicketAccept, solveUserProblem, isDefault, null);
        }
        
        /// <remarks/>
        public void rateDocumentAsync(int sid, int docId, int rating, int multiplier, string ticketPerId, bool onTicketAccept, bool solveUserProblem, bool isDefault, object userState) {
            if ((this.rateDocumentOperationCompleted == null)) {
                this.rateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrateDocumentOperationCompleted);
            }
            this.InvokeAsync("rateDocument", new object[] {
                        sid,
                        docId,
                        rating,
                        multiplier,
                        ticketPerId,
                        onTicketAccept,
                        solveUserProblem,
                        isDefault}, this.rateDocumentOperationCompleted, userState);
        }
        
        private void OnrateDocumentOperationCompleted(object arg) {
            if ((this.rateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rateDocumentCompleted(this, new rateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCommentsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getComments([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string docIds) {
            object[] results = this.Invoke("getComments", new object[] {
                        sid,
                        docIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCommentsAsync(int sid, string docIds) {
            this.getCommentsAsync(sid, docIds, null);
        }
        
        /// <remarks/>
        public void getCommentsAsync(int sid, string docIds, object userState) {
            if ((this.getCommentsOperationCompleted == null)) {
                this.getCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommentsOperationCompleted);
            }
            this.InvokeAsync("getComments", new object[] {
                        sid,
                        docIds}, this.getCommentsOperationCompleted, userState);
        }
        
        private void OngetCommentsOperationCompleted(object arg) {
            if ((this.getCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommentsCompleted(this, new getCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("findContactsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string findContacts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lastName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string firstName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string email, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string accessType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int inactiveFlag) {
            object[] results = this.Invoke("findContacts", new object[] {
                        sid,
                        userName,
                        lastName,
                        firstName,
                        email,
                        accessType,
                        inactiveFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void findContactsAsync(int sid, string userName, string lastName, string firstName, string email, string accessType, int inactiveFlag) {
            this.findContactsAsync(sid, userName, lastName, firstName, email, accessType, inactiveFlag, null);
        }
        
        /// <remarks/>
        public void findContactsAsync(int sid, string userName, string lastName, string firstName, string email, string accessType, int inactiveFlag, object userState) {
            if ((this.findContactsOperationCompleted == null)) {
                this.findContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindContactsOperationCompleted);
            }
            this.InvokeAsync("findContacts", new object[] {
                        sid,
                        userName,
                        lastName,
                        firstName,
                        email,
                        accessType,
                        inactiveFlag}, this.findContactsOperationCompleted, userState);
        }
        
        private void OnfindContactsOperationCompleted(object arg) {
            if ((this.findContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findContactsCompleted(this, new findContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getPermissionGroupsReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPermissionGroups([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int groupId) {
            object[] results = this.Invoke("getPermissionGroups", new object[] {
                        sid,
                        groupId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPermissionGroupsAsync(int sid, int groupId) {
            this.getPermissionGroupsAsync(sid, groupId, null);
        }
        
        /// <remarks/>
        public void getPermissionGroupsAsync(int sid, int groupId, object userState) {
            if ((this.getPermissionGroupsOperationCompleted == null)) {
                this.getPermissionGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPermissionGroupsOperationCompleted);
            }
            this.InvokeAsync("getPermissionGroups", new object[] {
                        sid,
                        groupId}, this.getPermissionGroupsOperationCompleted, userState);
        }
        
        private void OngetPermissionGroupsOperationCompleted(object arg) {
            if ((this.getPermissionGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPermissionGroupsCompleted(this, new getPermissionGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getContactReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getContact([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactId) {
            object[] results = this.Invoke("getContact", new object[] {
                        sid,
                        contactId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getContactAsync(int sid, string contactId) {
            this.getContactAsync(sid, contactId, null);
        }
        
        /// <remarks/>
        public void getContactAsync(int sid, string contactId, object userState) {
            if ((this.getContactOperationCompleted == null)) {
                this.getContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContactOperationCompleted);
            }
            this.InvokeAsync("getContact", new object[] {
                        sid,
                        contactId}, this.getContactOperationCompleted, userState);
        }
        
        private void OngetContactOperationCompleted(object arg) {
            if ((this.getContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContactCompleted(this, new getContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addBookmarkReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addBookmark([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId) {
            object[] results = this.Invoke("addBookmark", new object[] {
                        sid,
                        contactId,
                        docId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addBookmarkAsync(int sid, string contactId, int docId) {
            this.addBookmarkAsync(sid, contactId, docId, null);
        }
        
        /// <remarks/>
        public void addBookmarkAsync(int sid, string contactId, int docId, object userState) {
            if ((this.addBookmarkOperationCompleted == null)) {
                this.addBookmarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddBookmarkOperationCompleted);
            }
            this.InvokeAsync("addBookmark", new object[] {
                        sid,
                        contactId,
                        docId}, this.addBookmarkOperationCompleted, userState);
        }
        
        private void OnaddBookmarkOperationCompleted(object arg) {
            if ((this.addBookmarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addBookmarkCompleted(this, new addBookmarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateRatingReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string updateRating([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int buId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int rate) {
            object[] results = this.Invoke("updateRating", new object[] {
                        sid,
                        buId,
                        rate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateRatingAsync(int sid, int buId, int rate) {
            this.updateRatingAsync(sid, buId, rate, null);
        }
        
        /// <remarks/>
        public void updateRatingAsync(int sid, int buId, int rate, object userState) {
            if ((this.updateRatingOperationCompleted == null)) {
                this.updateRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRatingOperationCompleted);
            }
            this.InvokeAsync("updateRating", new object[] {
                        sid,
                        buId,
                        rate}, this.updateRatingOperationCompleted, userState);
        }
        
        private void OnupdateRatingOperationCompleted(object arg) {
            if ((this.updateRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRatingCompleted(this, new updateRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("doSelectKDReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string doSelectKD([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string whereClause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sortBy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool desc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int maxRows, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int skip) {
            object[] results = this.Invoke("doSelectKD", new object[] {
                        sid,
                        whereClause,
                        sortBy,
                        desc,
                        maxRows,
                        attributes,
                        skip});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doSelectKDAsync(int sid, string whereClause, string sortBy, bool desc, int maxRows, string[] attributes, int skip) {
            this.doSelectKDAsync(sid, whereClause, sortBy, desc, maxRows, attributes, skip, null);
        }
        
        /// <remarks/>
        public void doSelectKDAsync(int sid, string whereClause, string sortBy, bool desc, int maxRows, string[] attributes, int skip, object userState) {
            if ((this.doSelectKDOperationCompleted == null)) {
                this.doSelectKDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSelectKDOperationCompleted);
            }
            this.InvokeAsync("doSelectKD", new object[] {
                        sid,
                        whereClause,
                        sortBy,
                        desc,
                        maxRows,
                        attributes,
                        skip}, this.doSelectKDOperationCompleted, userState);
        }
        
        private void OndoSelectKDOperationCompleted(object arg) {
            if ((this.doSelectKDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doSelectKDCompleted(this, new doSelectKDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getFolderListReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getFolderList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int parentFolderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int repId) {
            object[] results = this.Invoke("getFolderList", new object[] {
                        sid,
                        parentFolderId,
                        repId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFolderListAsync(int sid, int parentFolderId, int repId) {
            this.getFolderListAsync(sid, parentFolderId, repId, null);
        }
        
        /// <remarks/>
        public void getFolderListAsync(int sid, int parentFolderId, int repId, object userState) {
            if ((this.getFolderListOperationCompleted == null)) {
                this.getFolderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFolderListOperationCompleted);
            }
            this.InvokeAsync("getFolderList", new object[] {
                        sid,
                        parentFolderId,
                        repId}, this.getFolderListOperationCompleted, userState);
        }
        
        private void OngetFolderListOperationCompleted(object arg) {
            if ((this.getFolderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFolderListCompleted(this, new getFolderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getFolderInfoReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getFolderInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int folderId) {
            object[] results = this.Invoke("getFolderInfo", new object[] {
                        sid,
                        folderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFolderInfoAsync(int sid, int folderId) {
            this.getFolderInfoAsync(sid, folderId, null);
        }
        
        /// <remarks/>
        public void getFolderInfoAsync(int sid, int folderId, object userState) {
            if ((this.getFolderInfoOperationCompleted == null)) {
                this.getFolderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFolderInfoOperationCompleted);
            }
            this.InvokeAsync("getFolderInfo", new object[] {
                        sid,
                        folderId}, this.getFolderInfoOperationCompleted, userState);
        }
        
        private void OngetFolderInfoOperationCompleted(object arg) {
            if ((this.getFolderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFolderInfoCompleted(this, new getFolderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAttmntListReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAttmntList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int folderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int repId) {
            object[] results = this.Invoke("getAttmntList", new object[] {
                        sid,
                        folderId,
                        repId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAttmntListAsync(int sid, int folderId, int repId) {
            this.getAttmntListAsync(sid, folderId, repId, null);
        }
        
        /// <remarks/>
        public void getAttmntListAsync(int sid, int folderId, int repId, object userState) {
            if ((this.getAttmntListOperationCompleted == null)) {
                this.getAttmntListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttmntListOperationCompleted);
            }
            this.InvokeAsync("getAttmntList", new object[] {
                        sid,
                        folderId,
                        repId}, this.getAttmntListOperationCompleted, userState);
        }
        
        private void OngetAttmntListOperationCompleted(object arg) {
            if ((this.getAttmntListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttmntListCompleted(this, new getAttmntListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAttmntInfoReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAttmntInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int attmntId) {
            object[] results = this.Invoke("getAttmntInfo", new object[] {
                        sid,
                        attmntId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAttmntInfoAsync(int sid, int attmntId) {
            this.getAttmntInfoAsync(sid, attmntId, null);
        }
        
        /// <remarks/>
        public void getAttmntInfoAsync(int sid, int attmntId, object userState) {
            if ((this.getAttmntInfoOperationCompleted == null)) {
                this.getAttmntInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttmntInfoOperationCompleted);
            }
            this.InvokeAsync("getAttmntInfo", new object[] {
                        sid,
                        attmntId}, this.getAttmntInfoOperationCompleted, userState);
        }
        
        private void OngetAttmntInfoOperationCompleted(object arg) {
            if ((this.getAttmntInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttmntInfoCompleted(this, new getAttmntInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRepositoryInfoReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getRepositoryInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int repositoryId) {
            object[] results = this.Invoke("getRepositoryInfo", new object[] {
                        sid,
                        repositoryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRepositoryInfoAsync(int sid, int repositoryId) {
            this.getRepositoryInfoAsync(sid, repositoryId, null);
        }
        
        /// <remarks/>
        public void getRepositoryInfoAsync(int sid, int repositoryId, object userState) {
            if ((this.getRepositoryInfoOperationCompleted == null)) {
                this.getRepositoryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepositoryInfoOperationCompleted);
            }
            this.InvokeAsync("getRepositoryInfo", new object[] {
                        sid,
                        repositoryId}, this.getRepositoryInfoOperationCompleted, userState);
        }
        
        private void OngetRepositoryInfoOperationCompleted(object arg) {
            if ((this.getRepositoryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepositoryInfoCompleted(this, new getRepositoryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createFolderReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string createFolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int parentFolderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int repId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int folderType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string folderName) {
            object[] results = this.Invoke("createFolder", new object[] {
                        sid,
                        parentFolderId,
                        repId,
                        folderType,
                        description,
                        folderName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createFolderAsync(int sid, int parentFolderId, int repId, int folderType, string description, string folderName) {
            this.createFolderAsync(sid, parentFolderId, repId, folderType, description, folderName, null);
        }
        
        /// <remarks/>
        public void createFolderAsync(int sid, int parentFolderId, int repId, int folderType, string description, string folderName, object userState) {
            if ((this.createFolderOperationCompleted == null)) {
                this.createFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFolderOperationCompleted);
            }
            this.InvokeAsync("createFolder", new object[] {
                        sid,
                        parentFolderId,
                        repId,
                        folderType,
                        description,
                        folderName}, this.createFolderOperationCompleted, userState);
        }
        
        private void OncreateFolderOperationCompleted(object arg) {
            if ((this.createFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFolderCompleted(this, new createFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("faqReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string faq([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string categoryIds, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int resultSize, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string propertyList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sortBy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool descending, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string whereClause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int maxDocIDs) {
            object[] results = this.Invoke("faq", new object[] {
                        sid,
                        categoryIds,
                        resultSize,
                        propertyList,
                        sortBy,
                        descending,
                        whereClause,
                        maxDocIDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void faqAsync(int sid, string categoryIds, int resultSize, string propertyList, string sortBy, bool descending, string whereClause, int maxDocIDs) {
            this.faqAsync(sid, categoryIds, resultSize, propertyList, sortBy, descending, whereClause, maxDocIDs, null);
        }
        
        /// <remarks/>
        public void faqAsync(int sid, string categoryIds, int resultSize, string propertyList, string sortBy, bool descending, string whereClause, int maxDocIDs, object userState) {
            if ((this.faqOperationCompleted == null)) {
                this.faqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfaqOperationCompleted);
            }
            this.InvokeAsync("faq", new object[] {
                        sid,
                        categoryIds,
                        resultSize,
                        propertyList,
                        sortBy,
                        descending,
                        whereClause,
                        maxDocIDs}, this.faqOperationCompleted, userState);
        }
        
        private void OnfaqOperationCompleted(object arg) {
            if ((this.faqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.faqCompleted(this, new faqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("attmntFolderLinkCountReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int attmntFolderLinkCount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int folderId) {
            object[] results = this.Invoke("attmntFolderLinkCount", new object[] {
                        sid,
                        folderId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void attmntFolderLinkCountAsync(int sid, int folderId) {
            this.attmntFolderLinkCountAsync(sid, folderId, null);
        }
        
        /// <remarks/>
        public void attmntFolderLinkCountAsync(int sid, int folderId, object userState) {
            if ((this.attmntFolderLinkCountOperationCompleted == null)) {
                this.attmntFolderLinkCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnattmntFolderLinkCountOperationCompleted);
            }
            this.InvokeAsync("attmntFolderLinkCount", new object[] {
                        sid,
                        folderId}, this.attmntFolderLinkCountOperationCompleted, userState);
        }
        
        private void OnattmntFolderLinkCountOperationCompleted(object arg) {
            if ((this.attmntFolderLinkCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.attmntFolderLinkCountCompleted(this, new attmntFolderLinkCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("attachURLLinkReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int attachURLLink([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string url, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string attmntName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description) {
            object[] results = this.Invoke("attachURLLink", new object[] {
                        sid,
                        docId,
                        url,
                        attmntName,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void attachURLLinkAsync(int sid, int docId, string url, string attmntName, string description) {
            this.attachURLLinkAsync(sid, docId, url, attmntName, description, null);
        }
        
        /// <remarks/>
        public void attachURLLinkAsync(int sid, int docId, string url, string attmntName, string description, object userState) {
            if ((this.attachURLLinkOperationCompleted == null)) {
                this.attachURLLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnattachURLLinkOperationCompleted);
            }
            this.InvokeAsync("attachURLLink", new object[] {
                        sid,
                        docId,
                        url,
                        attmntName,
                        description}, this.attachURLLinkOperationCompleted, userState);
        }
        
        private void OnattachURLLinkOperationCompleted(object arg) {
            if ((this.attachURLLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.attachURLLinkCompleted(this, new attachURLLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteBookmarkReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int deleteBookmark([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contactId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId) {
            object[] results = this.Invoke("deleteBookmark", new object[] {
                        sid,
                        contactId,
                        docId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteBookmarkAsync(int sid, string contactId, int docId) {
            this.deleteBookmarkAsync(sid, contactId, docId, null);
        }
        
        /// <remarks/>
        public void deleteBookmarkAsync(int sid, string contactId, int docId, object userState) {
            if ((this.deleteBookmarkOperationCompleted == null)) {
                this.deleteBookmarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteBookmarkOperationCompleted);
            }
            this.InvokeAsync("deleteBookmark", new object[] {
                        sid,
                        contactId,
                        docId}, this.deleteBookmarkOperationCompleted, userState);
        }
        
        private void OndeleteBookmarkOperationCompleted(object arg) {
            if ((this.deleteBookmarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteBookmarkCompleted(this, new deleteBookmarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getKDListPerAttmntReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getKDListPerAttmnt([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int attmntId) {
            object[] results = this.Invoke("getKDListPerAttmnt", new object[] {
                        sid,
                        attmntId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getKDListPerAttmntAsync(int sid, int attmntId) {
            this.getKDListPerAttmntAsync(sid, attmntId, null);
        }
        
        /// <remarks/>
        public void getKDListPerAttmntAsync(int sid, int attmntId, object userState) {
            if ((this.getKDListPerAttmntOperationCompleted == null)) {
                this.getKDListPerAttmntOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKDListPerAttmntOperationCompleted);
            }
            this.InvokeAsync("getKDListPerAttmnt", new object[] {
                        sid,
                        attmntId}, this.getKDListPerAttmntOperationCompleted, userState);
        }
        
        private void OngetKDListPerAttmntOperationCompleted(object arg) {
            if ((this.getKDListPerAttmntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKDListPerAttmntCompleted(this, new getKDListPerAttmntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAttmntListPerKDReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAttmntListPerKD([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId) {
            object[] results = this.Invoke("getAttmntListPerKD", new object[] {
                        sid,
                        docId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAttmntListPerKDAsync(int sid, int docId) {
            this.getAttmntListPerKDAsync(sid, docId, null);
        }
        
        /// <remarks/>
        public void getAttmntListPerKDAsync(int sid, int docId, object userState) {
            if ((this.getAttmntListPerKDOperationCompleted == null)) {
                this.getAttmntListPerKDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttmntListPerKDOperationCompleted);
            }
            this.InvokeAsync("getAttmntListPerKD", new object[] {
                        sid,
                        docId}, this.getAttmntListPerKDOperationCompleted, userState);
        }
        
        private void OngetAttmntListPerKDOperationCompleted(object arg) {
            if ((this.getAttmntListPerKDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttmntListPerKDCompleted(this, new getAttmntListPerKDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("isAttmntLinkedKDReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int isAttmntLinkedKD([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int attmntId) {
            object[] results = this.Invoke("isAttmntLinkedKD", new object[] {
                        sid,
                        attmntId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void isAttmntLinkedKDAsync(int sid, int attmntId) {
            this.isAttmntLinkedKDAsync(sid, attmntId, null);
        }
        
        /// <remarks/>
        public void isAttmntLinkedKDAsync(int sid, int attmntId, object userState) {
            if ((this.isAttmntLinkedKDOperationCompleted == null)) {
                this.isAttmntLinkedKDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAttmntLinkedKDOperationCompleted);
            }
            this.InvokeAsync("isAttmntLinkedKD", new object[] {
                        sid,
                        attmntId}, this.isAttmntLinkedKDOperationCompleted, userState);
        }
        
        private void OnisAttmntLinkedKDOperationCompleted(object arg) {
            if ((this.isAttmntLinkedKDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAttmntLinkedKDCompleted(this, new isAttmntLinkedKDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("transferReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string transfer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string creator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string objectHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool setAssignee, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newAssigneeHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool setGroup, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newGroupHandle, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool setOrganization, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newOrganizationHandle) {
            object[] results = this.Invoke("transfer", new object[] {
                        sid,
                        creator,
                        objectHandle,
                        description,
                        setAssignee,
                        newAssigneeHandle,
                        setGroup,
                        newGroupHandle,
                        setOrganization,
                        newOrganizationHandle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void transferAsync(int sid, string creator, string objectHandle, string description, bool setAssignee, string newAssigneeHandle, bool setGroup, string newGroupHandle, bool setOrganization, string newOrganizationHandle) {
            this.transferAsync(sid, creator, objectHandle, description, setAssignee, newAssigneeHandle, setGroup, newGroupHandle, setOrganization, newOrganizationHandle, null);
        }
        
        /// <remarks/>
        public void transferAsync(int sid, string creator, string objectHandle, string description, bool setAssignee, string newAssigneeHandle, bool setGroup, string newGroupHandle, bool setOrganization, string newOrganizationHandle, object userState) {
            if ((this.transferOperationCompleted == null)) {
                this.transferOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransferOperationCompleted);
            }
            this.InvokeAsync("transfer", new object[] {
                        sid,
                        creator,
                        objectHandle,
                        description,
                        setAssignee,
                        newAssigneeHandle,
                        setGroup,
                        newGroupHandle,
                        setOrganization,
                        newOrganizationHandle}, this.transferOperationCompleted, userState);
        }
        
        private void OntransferOperationCompleted(object arg) {
            if ((this.transferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transferCompleted(this, new transferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("searchReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string search([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string problem, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int resultSize, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string properties, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sortBy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool descending, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool relatedCategories, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int searchType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int matchType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int searchField, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string categoryPath, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string whereClause, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int maxDocIDs) {
            object[] results = this.Invoke("search", new object[] {
                        sid,
                        problem,
                        resultSize,
                        properties,
                        sortBy,
                        descending,
                        relatedCategories,
                        searchType,
                        matchType,
                        searchField,
                        categoryPath,
                        whereClause,
                        maxDocIDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchAsync(int sid, string problem, int resultSize, string properties, string sortBy, bool descending, bool relatedCategories, int searchType, int matchType, int searchField, string categoryPath, string whereClause, int maxDocIDs) {
            this.searchAsync(sid, problem, resultSize, properties, sortBy, descending, relatedCategories, searchType, matchType, searchField, categoryPath, whereClause, maxDocIDs, null);
        }
        
        /// <remarks/>
        public void searchAsync(int sid, string problem, int resultSize, string properties, string sortBy, bool descending, bool relatedCategories, int searchType, int matchType, int searchField, string categoryPath, string whereClause, int maxDocIDs, object userState) {
            if ((this.searchOperationCompleted == null)) {
                this.searchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchOperationCompleted);
            }
            this.InvokeAsync("search", new object[] {
                        sid,
                        problem,
                        resultSize,
                        properties,
                        sortBy,
                        descending,
                        relatedCategories,
                        searchType,
                        matchType,
                        searchField,
                        categoryPath,
                        whereClause,
                        maxDocIDs}, this.searchOperationCompleted, userState);
        }
        
        private void OnsearchOperationCompleted(object arg) {
            if ((this.searchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCompleted(this, new searchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", ResponseNamespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDocumentReturn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int sid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int docId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string propertyList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool relatedDoc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getAttmnt, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getHistory, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getComment, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getNotiList) {
            object[] results = this.Invoke("getDocument", new object[] {
                        sid,
                        docId,
                        propertyList,
                        relatedDoc,
                        getAttmnt,
                        getHistory,
                        getComment,
                        getNotiList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentAsync(int sid, int docId, string propertyList, bool relatedDoc, bool getAttmnt, bool getHistory, bool getComment, bool getNotiList) {
            this.getDocumentAsync(sid, docId, propertyList, relatedDoc, getAttmnt, getHistory, getComment, getNotiList, null);
        }
        
        /// <remarks/>
        public void getDocumentAsync(int sid, int docId, string propertyList, bool relatedDoc, bool getAttmnt, bool getHistory, bool getComment, bool getNotiList, object userState) {
            if ((this.getDocumentOperationCompleted == null)) {
                this.getDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentOperationCompleted);
            }
            this.InvokeAsync("getDocument", new object[] {
                        sid,
                        docId,
                        propertyList,
                        relatedDoc,
                        getAttmnt,
                        getHistory,
                        getComment,
                        getNotiList}, this.getDocumentOperationCompleted, userState);
        }
        
        private void OngetDocumentOperationCompleted(object arg) {
            if ((this.getDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentCompleted(this, new getDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ca.com/UnicenterServicePlus/ServiceDesk")]
    public partial class ListResult {
        
        private int listHandleField;
        
        private int listLengthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int listHandle {
            get {
                return this.listHandleField;
            }
            set {
                this.listHandleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int listLength {
            get {
                return this.listLengthField;
            }
            set {
                this.listLengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createObjectCompletedEventHandler(object sender, createObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string createObjectResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void addAssetLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createLrelRelationshipsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void addMemberToGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void attachChangeToRequestCompletedEventHandler(object sender, attachChangeToRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class attachChangeToRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal attachChangeToRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void callServerMethodCompletedEventHandler(object sender, callServerMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callServerMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callServerMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void changeStatusCompletedEventHandler(object sender, changeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void clearNotificationCompletedEventHandler(object sender, clearNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clearNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createActivityLogCompletedEventHandler(object sender, createActivityLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createActivityLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createActivityLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createAssetCompletedEventHandler(object sender, createAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string createAssetResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newAssetHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newExtensionHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string newExtensionName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createAssetParentChildRelationshipCompletedEventHandler(object sender, createAssetParentChildRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAssetParentChildRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAssetParentChildRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createAttachmentCompletedEventHandler(object sender, createAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void removeAttachmentCompletedEventHandler(object sender, removeAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createChangeOrderCompletedEventHandler(object sender, createChangeOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createChangeOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createChangeOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newChangeHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newChangeNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createIssueCompletedEventHandler(object sender, createIssueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newIssueHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newIssueNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createWorkFlowTaskCompletedEventHandler(object sender, createWorkFlowTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWorkFlowTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWorkFlowTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string createWorkFlowTaskResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteWorkFlowTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createRequestCompletedEventHandler(object sender, createRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRequestHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newRequestNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createTicketCompletedEventHandler(object sender, createTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newTicketHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newTicketNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string returnUserData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string returnApplicationData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createQuickTicketCompletedEventHandler(object sender, createQuickTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createQuickTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createQuickTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newTicketHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newTicketNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void closeTicketCompletedEventHandler(object sender, closeTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void logCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPolicyInfoCompletedEventHandler(object sender, getPolicyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPolicyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPolicyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void detachChangeFromRequestCompletedEventHandler(object sender, detachChangeFromRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class detachChangeFromRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal detachChangeFromRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void doSelectCompletedEventHandler(object sender, doSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void doQueryCompletedEventHandler(object sender, doQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void escalateCompletedEventHandler(object sender, escalateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class escalateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal escalateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void freeListHandlesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAssetExtensionInformationCompletedEventHandler(object sender, getAssetExtensionInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssetExtensionInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAssetExtensionInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string getAssetExtInfoResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string extensionHandle {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string extensionName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getConfigurationModeCompletedEventHandler(object sender, getConfigurationModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConfigurationModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConfigurationModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getGroupMemberListValuesCompletedEventHandler(object sender, getGroupMemberListValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupMemberListValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupMemberListValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getObjectTypeInformationCompletedEventHandler(object sender, getObjectTypeInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getObjectTypeInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getObjectTypeInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getHandleForUseridCompletedEventHandler(object sender, getHandleForUseridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHandleForUseridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHandleForUseridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAccessTypeForContactCompletedEventHandler(object sender, getAccessTypeForContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessTypeForContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessTypeForContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getListValuesCompletedEventHandler(object sender, getListValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getLrelLengthCompletedEventHandler(object sender, getLrelLengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLrelLengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLrelLengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getLrelValuesCompletedEventHandler(object sender, getLrelValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLrelValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLrelValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getNotificationsForContactCompletedEventHandler(object sender, getNotificationsForContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotificationsForContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotificationsForContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getObjectValuesCompletedEventHandler(object sender, getObjectValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getObjectValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getObjectValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPendingChangeTaskListForContactCompletedEventHandler(object sender, getPendingChangeTaskListForContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPendingChangeTaskListForContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPendingChangeTaskListForContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPendingIssueTaskListForContactCompletedEventHandler(object sender, getPendingIssueTaskListForContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPendingIssueTaskListForContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPendingIssueTaskListForContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPropertyInfoForCategoryCompletedEventHandler(object sender, getPropertyInfoForCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPropertyInfoForCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPropertyInfoForCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRelatedListCompletedEventHandler(object sender, getRelatedListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRelatedListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRelatedListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRelatedListValuesCompletedEventHandler(object sender, getRelatedListValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRelatedListValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRelatedListValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string getRelatedListValuesResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int numRowsFound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getWorkFlowTemplatesCompletedEventHandler(object sender, getWorkFlowTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkFlowTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkFlowTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getTaskListValuesCompletedEventHandler(object sender, getTaskListValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskListValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskListValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getValidTaskTransitionsCompletedEventHandler(object sender, getValidTaskTransitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getValidTaskTransitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getValidTaskTransitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getValidTransitionsCompletedEventHandler(object sender, getValidTransitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getValidTransitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getValidTransitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getDependentAttrControlsCompletedEventHandler(object sender, getDependentAttrControlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDependentAttrControlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDependentAttrControlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void loginServiceCompletedEventHandler(object sender, loginServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void loginServiceManagedCompletedEventHandler(object sender, loginServiceManagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginServiceManagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginServiceManagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void loginWithArtifactCompletedEventHandler(object sender, loginWithArtifactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginWithArtifactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginWithArtifactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void impersonateCompletedEventHandler(object sender, impersonateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class impersonateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal impersonateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void notifyContactsCompletedEventHandler(object sender, notifyContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class notifyContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal notifyContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void removeLrelRelationshipsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void removeMemberFromGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void serverStatusCompletedEventHandler(object sender, serverStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class serverStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal serverStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updateObjectCompletedEventHandler(object sender, updateObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getBopsidCompletedEventHandler(object sender, getBopsidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBopsidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBopsidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getArtifactCompletedEventHandler(object sender, getArtifactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getArtifactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getArtifactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void attachURLLinkToTicketCompletedEventHandler(object sender, attachURLLinkToTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class attachURLLinkToTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal attachURLLinkToTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createAttmntCompletedEventHandler(object sender, createAttmntCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAttmntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAttmntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getDocumentsByIDsCompletedEventHandler(object sender, getDocumentsByIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentsByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentsByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getDecisionTreesCompletedEventHandler(object sender, getDecisionTreesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDecisionTreesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDecisionTreesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteDocumentCompletedEventHandler(object sender, deleteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getCategoryCompletedEventHandler(object sender, getCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getStatusesCompletedEventHandler(object sender, getStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getBookmarksCompletedEventHandler(object sender, getBookmarksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBookmarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBookmarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getQuestionsAskedCompletedEventHandler(object sender, getQuestionsAskedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuestionsAskedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuestionsAskedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPrioritiesCompletedEventHandler(object sender, getPrioritiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPrioritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPrioritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getDocumentTypesCompletedEventHandler(object sender, getDocumentTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getTemplateListCompletedEventHandler(object sender, getTemplateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getWorkflowTemplateListCompletedEventHandler(object sender, getWorkflowTemplateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void addCommentCompletedEventHandler(object sender, addCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteCommentCompletedEventHandler(object sender, deleteCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createDocumentCompletedEventHandler(object sender, createDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void modifyDocumentCompletedEventHandler(object sender, modifyDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void rateDocumentCompletedEventHandler(object sender, rateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getCommentsCompletedEventHandler(object sender, getCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void findContactsCompletedEventHandler(object sender, findContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPermissionGroupsCompletedEventHandler(object sender, getPermissionGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPermissionGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPermissionGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getContactCompletedEventHandler(object sender, getContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void addBookmarkCompletedEventHandler(object sender, addBookmarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addBookmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addBookmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updateRatingCompletedEventHandler(object sender, updateRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void doSelectKDCompletedEventHandler(object sender, doSelectKDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doSelectKDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doSelectKDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getFolderListCompletedEventHandler(object sender, getFolderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFolderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFolderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getFolderInfoCompletedEventHandler(object sender, getFolderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFolderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFolderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAttmntListCompletedEventHandler(object sender, getAttmntListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttmntListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttmntListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAttmntInfoCompletedEventHandler(object sender, getAttmntInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttmntInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttmntInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRepositoryInfoCompletedEventHandler(object sender, getRepositoryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepositoryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepositoryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createFolderCompletedEventHandler(object sender, createFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void faqCompletedEventHandler(object sender, faqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class faqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal faqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void attmntFolderLinkCountCompletedEventHandler(object sender, attmntFolderLinkCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class attmntFolderLinkCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal attmntFolderLinkCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void attachURLLinkCompletedEventHandler(object sender, attachURLLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class attachURLLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal attachURLLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteBookmarkCompletedEventHandler(object sender, deleteBookmarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteBookmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteBookmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getKDListPerAttmntCompletedEventHandler(object sender, getKDListPerAttmntCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKDListPerAttmntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKDListPerAttmntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAttmntListPerKDCompletedEventHandler(object sender, getAttmntListPerKDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttmntListPerKDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttmntListPerKDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void isAttmntLinkedKDCompletedEventHandler(object sender, isAttmntLinkedKDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAttmntLinkedKDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAttmntLinkedKDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void transferCompletedEventHandler(object sender, transferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void searchCompletedEventHandler(object sender, searchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getDocumentCompletedEventHandler(object sender, getDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591